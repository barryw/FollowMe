******************************* Segment: Default *******************************
[Basic]
0801: 0b 08     -         
0803: 0a 00     -         
0805: 9e        -         
0806: 32 30 36 32                                      -         
080a: 00        -         
080b: 00 00     - upstartEnd:

[Basic End]
080e: 20 80 21  - Main:   jsr InitSound
0811: 20 f4 23  -         jsr InitRandom
0814: 20 00 20  -         jsr ClearTimers
0817: 20 f5 08  -         jsr SetupTimers
081a: 20 60 09  -         jsr SetupScreen
081d: 20 5e 08  -         jsr SetupSprites
0820: 20 2b 08  -         jsr SetupInterrupt
0823: a9 00     -         lda value
0825: 8d 51 13  -         sta address
0828: 4c cb 09  -         jmp GameLoop
082b: 78        - SetupInterrupt:sei
082c: a9 7f     -         lda #LOWER7
082e: 8d 0d dc  -         sta vic.CIAICR
0831: 8d 0d dd  -         sta vic.CI2ICR
0834: ad 0d dc  -         lda vic.CIAICR
0837: ad 0d dd  -         lda vic.CI2ICR
083a: a9 01     -         lda #$01
083c: 8d 19 d0  -         sta vic.VICIRQ
083f: 8d 1a d0  -         sta vic.IRQMSK
0842: a9 00     -         lda value
0844: 8d 12 d0  -         sta address
0847: a9 1b     -         lda value
0849: 8d 11 d0  -         sta address
084c: a9 35     -         lda value
084e: 85 01     -         sta address
0850: 48        -         pha
0851: a9 34     -         lda #<word
0853: 8d fe ff  -         sta address
0856: a9 09     -         lda #>word
0858: 8d ff ff  -         sta address + $01
085b: 68        -         pla
085c: 58        -         cli
085d: 60        -         rts
085e: a9 00     - SetupSprites:lda value
0860: 8d 26 d0  -         sta address
0863: a9 0b     -         lda #vic.DK_GRAY
0865: 8d 27 d0  -         sta vic.SP0COL
0868: 8d 28 d0  -         sta vic.SP1COL
086b: 8d 29 d0  -         sta vic.SP2COL
086e: 8d 2a d0  -         sta vic.SP3COL
0871: a9 01     -         lda #vic.WHITE
0873: 8d 2b d0  -         sta vic.SP4COL
0876: 8d 2c d0  -         sta vic.SP5COL
0879: 8d 2d d0  -         sta vic.SP6COL
087c: 8d 2e d0  -         sta vic.SP7COL
087f: a9 33     -         lda value
0881: 8d f8 07  -         sta address
0884: a9 34     -         lda value
0886: 8d f9 07  -         sta address
0889: a9 35     -         lda value
088b: 8d fa 07  -         sta address
088e: a9 36     -         lda value
0890: 8d fb 07  -         sta address
0893: a9 32     -         lda #SPRITES+$00
0895: 8d fc 07  -         sta SPRITE_POINTERS + $04
0898: 8d fd 07  -         sta SPRITE_POINTERS + $05
089b: 8d fe 07  -         sta SPRITE_POINTERS + $06
089e: 8d ff 07  -         sta SPRITE_POINTERS + $07
08a1: a9 f0     -         lda value
08a3: 8d 15 d0  -         sta address
08a6: a9 ff     -         lda value
08a8: 8d 1c d0  -         sta address
08ab: a9 87     -         lda #135
08ad: 8d 01 d0  -         sta vic.SP0Y
08b0: 8d 03 d0  -         sta vic.SP1Y
08b3: 8d 05 d0  -         sta vic.SP2Y
08b6: 8d 07 d0  -         sta vic.SP3Y
08b9: a9 50     -         lda #80
08bb: 8d 09 d0  -         sta vic.SP4Y
08be: 8d 0b d0  -         sta vic.SP5Y
08c1: 8d 0d d0  -         sta vic.SP6Y
08c4: 8d 0f d0  -         sta vic.SP7Y
08c7: a9 84     -         lda value
08c9: 8d 08 d0  -         sta address
08cc: a9 9e     -         lda value
08ce: 8d 0a d0  -         sta address
08d1: a9 b8     -         lda value
08d3: 8d 0c d0  -         sta address
08d6: a9 d2     -         lda value
08d8: 8d 0e d0  -         sta address
08db: a9 34     -         lda value
08dd: 8d 00 d0  -         sta address
08e0: a9 84     -         lda value
08e2: 8d 02 d0  -         sta address
08e5: a9 d4     -         lda value
08e7: 8d 04 d0  -         sta address
08ea: a9 08     -         lda value
08ec: 8d 10 d0  -         sta address
08ef: a9 23     -         lda value
08f1: 8d 06 d0  -         sta address
08f4: 60        -         rts
08f5: a9 0a     - SetupTimers:lda value
08f7: 85 fb     -         sta address
08f9: a9 00     -         lda value
08fb: 85 fc     -         sta address
08fd: a9 15     -         lda value
08ff: 85 fd     -         sta address
0901: a9 0c     -         lda value
0903: 85 fe     -         sta address
0905: a9 01     -         lda value
0907: 85 02     -         sta address
0909: a9 02     -         lda value
090b: 85 03     -         sta address
090d: a9 80     -         lda value
090f: 85 04     -         sta address
0911: 20 18 20  -         jsr CreateTimer
0914: a9 05     -         lda value
0916: 85 fb     -         sta address
0918: a9 00     -         lda value
091a: 85 fc     -         sta address
091c: a9 36     -         lda value
091e: 85 fd     -         sta address
0920: a9 0c     -         lda value
0922: 85 fe     -         sta address
0924: a9 01     -         lda value
0926: 85 02     -         sta address
0928: a9 03     -         lda value
092a: 85 03     -         sta address
092c: a9 80     -         lda value
092e: 85 04     -         sta address
0930: 20 18 20  -         jsr CreateTimer
0933: 60        -         rts
0934: 08        - Irq:    php
0935: 48        -         pha
0936: 8a        -         txa
0937: 48        -         pha
0938: 98        -         tya
0939: 48        -         pha
093a: 20 47 20  -         jsr UpdateTimers
093d: ad 51 13  -         lda GameMode
0940: c9 00     -         cmp #GAME_MODE_ATTRACT
0942: d0 08     -         bne !+
0944: 20 e4 21  -         jsr Keyboard
0947: b0 03     -         bcs !+
0949: 8d 54 13  -         sta LastKeyboardKey
094c: ee 52 13  -         inc Clock
094f: d0 03     -         bne !+
0951: ee 53 13  -         inc Clock + $01
0954: a9 ff     -         lda #$ff
0956: 8d 19 d0  -         sta vic.VICIRQ
0959: 68        -         pla
095a: a8        -         tay
095b: 68        -         pla
095c: aa        -         tax
095d: 68        -         pla
095e: 28        -         plp
095f: 40        -         rti
0960: a9 00     - SetupScreen:lda #vic.BLACK
0962: 8d 20 d0  -         sta vic.EXTCOL
0965: 8d 21 d0  -         sta vic.BGCOL0
0968: a9 20     -         lda #clearByte
096a: a2 00     -         ldx #0
096c: 9d 00 04  -         sta screen, x
096f: 9d 00 05  -         sta screen + $100, x
0972: 9d 00 06  -         sta screen + $200, x
0975: 9d 00 07  -         sta screen + $300, x
0978: e8        -         inx
0979: d0 f1     -         bne !-
097b: a9 01     -         lda #clearByte
097d: a2 00     -         ldx #0
097f: 9d 00 d8  -         sta $d800, x
0982: 9d 00 d9  -         sta $d800 + $100, x
0985: 9d 00 da  -         sta $d800 + $200, x
0988: 9d 00 db  -         sta $d800 + $300, x
098b: e8        -         inx
098c: d0 f1     -         bne !-
098e: a9 36     -         lda value
0990: 85 08     -         sta address
0992: a9 04     -         lda value
0994: 85 09     -         sta address
0996: a9 17     -         lda value
0998: 85 10     -         sta address
099a: a9 0f     -         lda value
099c: 85 11     -         sta address
099e: 20 f5 0b  -         jsr WriteString
09a1: a9 36     -         lda value
09a3: 85 08     -         sta address
09a5: a9 d8     -         lda value
09a7: 85 09     -         sta address
09a9: a9 0c     -         lda value
09ab: 85 10     -         sta address
09ad: a9 10     -         lda value
09af: 85 11     -         sta address
09b1: 20 f5 0b  -         jsr WriteString
09b4: a9 2a     -         lda value
09b6: 85 08     -         sta address
09b8: a9 07     -         lda value
09ba: 85 09     -         sta address
09bc: a9 00     -         lda value
09be: 85 10     -         sta address
09c0: a9 0f     -         lda value
09c2: 85 11     -         sta address
09c4: 20 f5 0b  -         jsr WriteString
09c7: 20 2f 24  -         jsr AllOff
09ca: 60        -         rts
09cb: 20 c0 0b  - GameLoop:jsr UpdateScore
09ce: ad 51 13  -         lda GameMode
09d1: c9 00     -         cmp #GAME_MODE_ATTRACT
09d3: d0 06     -         bne CheckComputer
09d5: 20 83 0b  -         jsr Attract
09d8: 4c ce 09  -         jmp !-
09db: c9 01     - CheckComputer:cmp #GAME_MODE_COMPUTER                 // Is it the computer's turn?
09dd: d0 70     -         bne CheckHuman
09df: 20 08 0c  -         jsr ClearLine
09e2: a9 26     -         lda value
09e4: 85 08     -         sta address
09e6: a9 07     -         lda value
09e8: 85 09     -         sta address
09ea: a9 24     -         lda value
09ec: 85 10     -         sta address
09ee: a9 0f     -         lda value
09f0: 85 11     -         sta address
09f2: 20 f5 0b  -         jsr WriteString
09f5: a9 26     -         lda value
09f7: 85 08     -         sta address
09f9: a9 db     -         lda value
09fb: 85 09     -         sta address
09fd: a9 40     -         lda value
09ff: 85 10     -         sta address
0a01: a9 0f     -         lda value
0a03: 85 11     -         sta address
0a05: 20 f5 0b  -         jsr WriteString
0a08: a9 40     -         lda value
0a0a: 85 12     -         sta address
0a0c: 20 ca 20  -         jsr PauseJiffies
0a0f: a2 00     -         ldx #$00
0a11: 86 15     -         stx r8H
0a13: a6 15     -         ldx r8H
0a15: bd 57 13  -         lda GamePattern, x                      // Get the current note
0a18: c9 00     -         cmp #$00                                // Have we reached the end of the pattern?
0a1a: f0 15     -         beq !+
0a1c: 85 03     -         sta r2H
0a1e: a9 20     -         lda value
0a20: 85 12     -         sta address
0a22: a9 05     -         lda value
0a24: 85 13     -         sta address
0a26: 20 04 24  -         jsr ButtonWithSound
0a29: 20 1e 24  -         jsr ButtonHold
0a2c: e6 15     -         inc r8H
0a2e: 4c 13 0a  -         jmp !-
0a31: 20 eb 23  -         jsr GenerateRandom                      // Generate a new note and tack it onto the end of the pattern
0a34: 9d 57 13  -         sta GamePattern, x
0a37: 85 03     -         sta r2H
0a39: a9 20     -         lda value
0a3b: 85 12     -         sta address
0a3d: a9 05     -         lda value
0a3f: 85 13     -         sta address
0a41: 20 04 24  -         jsr ButtonWithSound
0a44: 20 1e 24  -         jsr ButtonHold
0a47: a9 02     -         lda value
0a49: 8d 51 13  -         sta address
0a4c: 4c cb 09  -         jmp GameLoop
0a4f: c9 02     - CheckHuman:cmp #GAME_MODE_HUMAN                    // Is it the human's turn?
0a51: f0 03     -         beq !+
0a53: 4c de 0a  -         jmp CheckFail
0a56: 20 08 0c  -         jsr ClearLine
0a59: a9 22     -         lda value
0a5b: 85 08     -         sta address
0a5d: a9 07     -         lda value
0a5f: 85 09     -         sta address
0a61: a9 5c     -         lda value
0a63: 85 10     -         sta address
0a65: a9 0f     -         lda value
0a67: 85 11     -         sta address
0a69: 20 f5 0b  -         jsr WriteString
0a6c: a9 22     -         lda value
0a6e: 85 08     -         sta address
0a70: a9 db     -         lda value
0a72: 85 09     -         sta address
0a74: a9 81     -         lda value
0a76: 85 10     -         sta address
0a78: a9 0f     -         lda value
0a7a: 85 11     -         sta address
0a7c: 20 f5 0b  -         jsr WriteString
0a7f: a2 00     -         ldx #$00
0a81: 86 15     -         stx r8H
0a83: a6 15     -         ldx r8H
0a85: bd 57 13  -         lda GamePattern, x                      // Grab the move in the pattern so that we can make sure the human plays the same note
0a88: 85 22     -         sta r12L
0a8a: c9 00     -         cmp #$00                                // End of the pattern?
0a8c: d0 08     -         bne !+
0a8e: a9 01     -         lda value
0a90: 8d 51 13  -         sta address
0a93: 4c cb 09  -         jmp GameLoop
0a96: 20 e4 21  -         jsr Keyboard
0a99: b0 fb     -         bcs !-
0a9b: 38        -         sec
0a9c: e9 31     -         sbc #$31
0a9e: c9 04     -         cmp #$04
0aa0: b0 29     -         bcs !++
0aa2: 18        -         clc
0aa3: 69 01     -         adc #$01
0aa5: c5 22     -         cmp r12L                                // Is this the right note?
0aa7: f0 08     -         beq !+
0aa9: a9 03     -         lda value
0aab: 8d 51 13  -         sta address
0aae: 4c cb 09  -         jmp GameLoop
0ab1: 85 03     -         sta r2H
0ab3: 20 04 24  -         jsr ButtonWithSound
0ab6: f8        -         sed
0ab7: ad 56 13  -         lda Score + $01
0aba: 18        -         clc
0abb: 69 10     -         adc #$10                                // Add 10 points
0abd: 8d 56 13  -         sta Score + $01
0ac0: 90 09     -         bcc !+
0ac2: ad 55 13  -         lda Score
0ac5: 18        -         clc
0ac6: 69 01     -         adc #$01
0ac8: 8d 55 13  -         sta Score
0acb: d8        -         cld
0acc: 20 e4 21  -         jsr Keyboard                            // Wait for button to be released
0acf: c9 ff     -         cmp #$ff
0ad1: f0 f8     -         beq !-
0ad3: 20 2f 24  -         jsr AllOff
0ad6: 20 bd 21  -         jsr StopSound
0ad9: e6 15     -         inc r8H
0adb: 4c 83 0a  -         jmp !----
0ade: c9 03     - CheckFail:cmp #GAME_MODE_FAIL
0ae0: d0 29     -         bne CheckGameOver
0ae2: a9 00     -         lda #$00
0ae4: 8d 55 13  -         sta Score
0ae7: 8d 56 13  -         sta Score + $01
0aea: a5 22     -         lda r12L
0aec: 85 03     -         sta r2H
0aee: 20 65 24  -         jsr TurnButtonOn
0af1: a9 00     -         lda #$00
0af3: 20 9a 21  -         jsr PlaySound
0af6: a9 40     -         lda value
0af8: 85 12     -         sta address
0afa: 20 ca 20  -         jsr PauseJiffies
0afd: 20 bd 21  -         jsr StopSound
0b00: 20 2f 24  -         jsr AllOff
0b03: a9 04     -         lda value
0b05: 8d 51 13  -         sta address
0b08: 4c cb 09  -         jmp GameLoop
0b0b: c9 04     - CheckGameOver:cmp #GAME_MODE_GAME_OVER
0b0d: d0 71     -         bne !++++
0b0f: 20 08 0c  -         jsr ClearLine
0b12: a9 29     -         lda value
0b14: 85 08     -         sta address
0b16: a9 07     -         lda value
0b18: 85 09     -         sta address
0b1a: a9 a6     -         lda value
0b1c: 85 10     -         sta address
0b1e: a9 0f     -         lda value
0b20: 85 11     -         sta address
0b22: 20 f5 0b  -         jsr WriteString
0b25: a9 29     -         lda value
0b27: 85 08     -         sta address
0b29: a9 db     -         lda value
0b2b: 85 09     -         sta address
0b2d: a9 bd     -         lda value
0b2f: 85 10     -         sta address
0b31: a9 0f     -         lda value
0b33: 85 11     -         sta address
0b35: 20 f5 0b  -         jsr WriteString
0b38: 20 e4 21  -         jsr Keyboard
0b3b: b0 fb     -         bcs !-
0b3d: c9 19     -         cmp #$19
0b3f: f0 30     -         beq !+
0b41: 20 08 0c  -         jsr ClearLine
0b44: a9 26     -         lda value
0b46: 85 08     -         sta address
0b48: a9 07     -         lda value
0b4a: 85 09     -         sta address
0b4c: a9 d4     -         lda value
0b4e: 85 10     -         sta address
0b50: a9 0f     -         lda value
0b52: 85 11     -         sta address
0b54: 20 f5 0b  -         jsr WriteString
0b57: a9 26     -         lda value
0b59: 85 08     -         sta address
0b5b: a9 db     -         lda value
0b5d: 85 09     -         sta address
0b5f: a9 f0     -         lda value
0b61: 85 10     -         sta address
0b63: a9 0f     -         lda value
0b65: 85 11     -         sta address
0b67: 20 f5 0b  -         jsr WriteString
0b6a: a9 37     -         lda value
0b6c: 85 01     -         sta address
0b6e: 20 e2 fc  -         jsr $fce2
0b71: a9 01     -         lda value
0b73: 8d 51 13  -         sta address
0b76: a2 64     -         ldx #$64
0b78: a9 00     -         lda #$00
0b7a: 9d 57 13  -         sta GamePattern, x
0b7d: ca        -         dex
0b7e: 10 fa     -         bpl !-
0b80: 4c cb 09  -         jmp GameLoop
0b83: ad 54 13  - Attract:lda LastKeyboardKey
0b86: f0 25     -         beq !++
0b88: a9 01     -         lda value
0b8a: 8d 51 13  -         sta address
0b8d: a9 ff     -         lda value
0b8f: 8d 15 d0  -         sta address
0b92: 20 2f 24  -         jsr AllOff
0b95: a9 03     -         lda value
0b97: 85 03     -         sta address
0b99: a9 00     -         lda value
0b9b: 85 04     -         sta address
0b9d: 20 be 20  -         jsr EnDisTimer
0ba0: a2 17     -         ldx #TitleScreen - StartMessage
0ba2: a9 20     -         lda #$20
0ba4: 9d 20 07  -         sta MESSAGE_LOCATION, x
0ba7: ca        -         dex
0ba8: d0 fa     -         bne !-
0baa: 4c bf 0b  -         jmp !++
0bad: 20 eb 23  -         jsr GenerateRandom                      // Randomly flash buttons in attract mode
0bb0: 85 03     -         sta r2H
0bb2: 20 65 24  -         jsr TurnButtonOn
0bb5: a9 20     -         lda value
0bb7: 85 12     -         sta address
0bb9: 20 ca 20  -         jsr PauseJiffies
0bbc: 20 2f 24  -         jsr AllOff
0bbf: 60        -         rts
0bc0: ad 56 13  - UpdateScore:lda Score + $01
0bc3: 29 0f     -         and #$0f
0bc5: 18        -         clc
0bc6: 69 32     -         adc #SPRITES
0bc8: 8d ff 07  -         sta SCORE_ONES
0bcb: ad 56 13  -         lda Score + $01
0bce: 29 f0     -         and #$f0
0bd0: 4a        -         lsr
0bd1: 4a        -         lsr
0bd2: 4a        -         lsr
0bd3: 4a        -         lsr
0bd4: 18        -         clc
0bd5: 69 32     -         adc #SPRITES
0bd7: 8d fe 07  -         sta SCORE_TENS
0bda: ad 55 13  -         lda Score
0bdd: 29 0f     -         and #$0f
0bdf: 18        -         clc
0be0: 69 32     -         adc #SPRITES
0be2: 8d fd 07  -         sta SCORE_HUNDREDS
0be5: ad 55 13  -         lda Score
0be8: 29 f0     -         and #$f0
0bea: 4a        -         lsr
0beb: 4a        -         lsr
0bec: 4a        -         lsr
0bed: 4a        -         lsr
0bee: 18        -         clc
0bef: 69 32     -         adc #SPRITES
0bf1: 8d fc 07  -         sta SCORE_THOUSANDS
0bf4: 60        -         rts
0bf5: a0 00     - WriteString:ldy #$00
0bf7: b1 10     -         lda (r6), y
0bf9: f0 0c     -         beq !++
0bfb: 91 08     -         sta (r5), y
0bfd: c8        -         iny
0bfe: d0 04     -         bne !+
0c00: e6 11     -         inc r6H
0c02: e6 09     -         inc r5H
0c04: 4c f7 0b  -         jmp !--
0c07: 60        -         rts
0c08: a0 00     - ClearLine:ldy #$00
0c0a: a9 20     -         lda #$20
0c0c: 99 20 07  -         sta MESSAGE_LOCATION, y
0c0f: c8        -         iny
0c10: c0 28     -         cpy #$28
0c12: d0 f8     -         bne !-
0c14: 60        -         rts
0c15: a2 00     - AnimateTitle:ldx #$00
0c17: ac 50 13  -         ldy CurrentTitleColor
0c1a: b9 0c 10  -         lda TitleScreenColor, y
0c1d: 9d 36 d8  -         sta TITLE_LOCATION + $d400, x
0c20: e8        -         inx
0c21: c8        -         iny
0c22: e0 0c     -         cpx #$0c
0c24: d0 f4     -         bne !-
0c26: ee 50 13  -         inc CurrentTitleColor
0c29: ad 50 13  -         lda CurrentTitleColor
0c2c: c9 0c     -         cmp #$0c
0c2e: d0 05     -         bne !+
0c30: a9 00     -         lda #$00
0c32: 8d 50 13  -         sta CurrentTitleColor
0c35: 60        -         rts
0c36: a2 00     - AnimateStartMessage:ldx #$00
0c38: ac 4f 13  -         ldy CurrentStartMessageColor
0c3b: b9 25 10  -         lda StartMessageColors, y
0c3e: 9d 2a db  -         sta $db2a, x
0c41: e8        -         inx
0c42: e0 17     -         cpx #TitleScreen - StartMessage
0c44: d0 f8     -         bne !-
0c46: ee 4f 13  -         inc CurrentStartMessageColor
0c49: ad 4f 13  -         lda CurrentStartMessageColor
0c4c: c9 08     -         cmp #$08
0c4e: d0 05     -         bne !+
0c50: a9 00     -         lda #$00
0c52: 8d 4f 13  -         sta CurrentStartMessageColor
0c55: 60        -         rts
0c56: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  -         .align $40
0c66: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0c76: 00 00 00 00 00 00 00 00 00 00                   
0c80: 00 00 00 00 00 00 00 00                          - Sprites:.byte $00,$00,$00,$00,$00,$00,$00,$00
0c88: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0c90: 29 00 00 aa 40 02 82 90                          -         .byte $29,$00,$00,$aa,$40,$02,$82,$90
0c98: 02 82 90 02 82 90 02 8a                          -         .byte $02,$82,$90,$02,$82,$90,$02,$8a
0ca0: 90 02 a2 90 02 82 90 02                          -         .byte $90,$02,$a2,$90,$02,$82,$90,$02
0ca8: 82 90 02 82 90 00 aa 40                          -         .byte $82,$90,$02,$82,$90,$00,$aa,$40
0cb0: 00 29 00 00 00 00 00 00                          -         .byte $00,$29,$00,$00,$00,$00,$00,$00
0cb8: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0cc0: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0cc8: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0cd0: 29 00 00 29 00 00 a9 00                          -         .byte $29,$00,$00,$29,$00,$00,$a9,$00
0cd8: 02 a9 00 00 29 00 00 29                          -         .byte $02,$a9,$00,$00,$29,$00,$00,$29
0ce0: 00 00 29 00 00 29 00 00                          -         .byte $00,$00,$29,$00,$00,$29,$00,$00
0ce8: 29 00 00 29 00 02 aa 90                          -         .byte $29,$00,$00,$29,$00,$02,$aa,$90
0cf0: 02 aa 90 00 00 00 00 00                          -         .byte $02,$aa,$90,$00,$00,$00,$00,$00
0cf8: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0d00: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0d08: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0d10: 29 00 00 aa 40 02 92 90                          -         .byte $29,$00,$00,$aa,$40,$02,$92,$90
0d18: 02 92 90 00 02 90 00 0a                          -         .byte $02,$92,$90,$00,$02,$90,$00,$0a
0d20: 40 00 29 00 00 a4 00 02                          -         .byte $40,$00,$29,$00,$00,$a4,$00,$02
0d28: 90 00 02 90 00 02 aa 90                          -         .byte $90,$00,$02,$90,$00,$02,$aa,$90
0d30: 02 aa 90 00 00 00 00 00                          -         .byte $02,$aa,$90,$00,$00,$00,$00,$00
0d38: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0d40: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0d48: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0d50: 29 00 00 aa 40 02 92 90                          -         .byte $29,$00,$00,$aa,$40,$02,$92,$90
0d58: 00 02 90 00 02 90 00 2a                          -         .byte $00,$02,$90,$00,$02,$90,$00,$2a
0d60: 40 00 2a 40 00 02 90 00                          -         .byte $40,$00,$2a,$40,$00,$02,$90,$00
0d68: 02 90 02 92 90 00 aa 40                          -         .byte $02,$90,$02,$92,$90,$00,$aa,$40
0d70: 00 29 00 00 00 00 00 00                          -         .byte $00,$29,$00,$00,$00,$00,$00,$00
0d78: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0d80: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0d88: 00 00 00 00 00 00 00 02                          -         .byte $00,$00,$00,$00,$00,$00,$00,$02
0d90: 92 90 02 92 90 02 92 90                          -         .byte $92,$90,$02,$92,$90,$02,$92,$90
0d98: 02 92 90 02 92 90 02 aa                          -         .byte $02,$92,$90,$02,$92,$90,$02,$aa
0da0: 90 02 aa 90 00 02 90 00                          -         .byte $90,$02,$aa,$90,$00,$02,$90,$00
0da8: 02 90 00 02 90 00 02 90                          -         .byte $02,$90,$00,$02,$90,$00,$02,$90
0db0: 00 02 90 00 00 00 00 00                          -         .byte $00,$02,$90,$00,$00,$00,$00,$00
0db8: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0dc0: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0dc8: 00 00 00 00 00 00 00 02                          -         .byte $00,$00,$00,$00,$00,$00,$00,$02
0dd0: aa 90 02 92 90 02 90 00                          -         .byte $aa,$90,$02,$92,$90,$02,$90,$00
0dd8: 02 90 00 02 90 00 02 aa                          -         .byte $02,$90,$00,$02,$90,$00,$02,$aa
0de0: 40 00 aa 90 00 02 90 00                          -         .byte $40,$00,$aa,$90,$00,$02,$90,$00
0de8: 02 90 02 92 90 02 9a 40                          -         .byte $02,$90,$02,$92,$90,$02,$9a,$40
0df0: 00 a9 00 00 00 00 00 00                          -         .byte $00,$a9,$00,$00,$00,$00,$00,$00
0df8: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0e00: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0e08: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0e10: 0a 90 00 2a 90 00 a4 00                          -         .byte $0a,$90,$00,$2a,$90,$00,$a4,$00
0e18: 02 90 00 02 99 00 02 aa                          -         .byte $02,$90,$00,$02,$99,$00,$02,$aa
0e20: 90 02 a6 90 02 92 90 02                          -         .byte $90,$02,$a6,$90,$02,$92,$90,$02
0e28: 92 90 02 92 90 02 92 90                          -         .byte $92,$90,$02,$92,$90,$02,$92,$90
0e30: 00 aa 40 00 00 00 00 00                          -         .byte $00,$aa,$40,$00,$00,$00,$00,$00
0e38: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0e40: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0e48: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0e50: aa a4 00 00 a4 00 00 a4                          -         .byte $aa,$a4,$00,$00,$a4,$00,$00,$a4
0e58: 00 02 90 00 02 90 00 0a                          -         .byte $00,$02,$90,$00,$02,$90,$00,$0a
0e60: 40 00 0a 40 00 29 00 00                          -         .byte $40,$00,$0a,$40,$00,$29,$00,$00
0e68: 29 00 00 29 00 00 29 00                          -         .byte $29,$00,$00,$29,$00,$00,$29,$00
0e70: 00 29 00 00 00 00 00 00                          -         .byte $00,$29,$00,$00,$00,$00,$00,$00
0e78: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0e80: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0e88: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0e90: 29 00 00 aa 40 02 92 90                          -         .byte $29,$00,$00,$aa,$40,$02,$92,$90
0e98: 02 92 90 02 92 90 00 aa                          -         .byte $02,$92,$90,$02,$92,$90,$00,$aa
0ea0: 40 02 92 90 02 92 90 02                          -         .byte $40,$02,$92,$90,$02,$92,$90,$02
0ea8: 92 90 02 92 90 00 aa 40                          -         .byte $92,$90,$02,$92,$90,$00,$aa,$40
0eb0: 00 29 00 00 00 00 00 00                          -         .byte $00,$29,$00,$00,$00,$00,$00,$00
0eb8: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0ec0: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0ec8: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0ed0: aa 40 02 92 90 02 92 90                          -         .byte $aa,$40,$02,$92,$90,$02,$92,$90
0ed8: 02 92 90 02 92 90 02 9a                          -         .byte $02,$92,$90,$02,$92,$90,$02,$9a
0ee0: 90 02 aa 90 00 26 90 00                          -         .byte $90,$02,$aa,$90,$00,$26,$90,$00
0ee8: 02 90 00 0a 40 02 a9 00                          -         .byte $02,$90,$00,$0a,$40,$02,$a9,$00
0ef0: 02 a4 00 00 00 00 00 00                          -         .byte $02,$a4,$00,$00,$00,$00,$00,$00
0ef8: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0f00: 10 12 05 13 13 20 01 0e 19 20 0b 05 19 20 14 0f  - StartMessage:.text "press any key to start"
0f10: 20 13 14 01 12 14                               
0f16: 00        -         .byte $00
0f17: 06 0f 0c 0c 0f 17 20 0d 05 20 16 31              - TitleScreen:.text "follow me v1"
0f23: 00        -         .byte $00
0f24: 17 01 14 03 08 20 01 0e 04 20 0c 09 13 14 05 0e  - MyTurn: .text "watch and listen carefully!"
0f34: 20 03 01 12 05 06 15 0c 0c 19 21                
0f3f: 00        -         .byte $00
0f40: 01 01 01 01 01 01 01 01 01 01 01 01              - MyTurnColor:.byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
0f4c: 01 01 01 01 01 01 01 01 01 01 01 01              -         .byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
0f58: 01 01 01  -         .byte vic.WHITE, vic.WHITE, vic.WHITE
0f5b: 00        -         .byte $00
0f5c: 19 0f 15 12 20 14 15 12 0e 21 20 13 08 0f 17 20  - YourTurn:.text "your turn! show me what ya got, kid!"
0f6c: 0d 05 20 17 08 01 14 20 19 01 20 07 0f 14 2c 20 
0f7c: 0b 09 04 21                                     
0f80: 00        -         .byte $00
0f81: 01 01 01 01 01 01 01 01 01 01 01 01              - YourTurnColor:.byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
0f8d: 01 01 01 01 01 01 01 01 01 01 01 01              -         .byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
0f99: 01 01 01 01 01 01 01 01 01 01 01 01              -         .byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
0fa5: 00        -         .byte $00
0fa6: 07 01 0d 05 20 0f 16 05 12 2e 20 10 0c 01 19 20  - GameOver:.text "game over. play again?"
0fb6: 01 07 01 09 0e 3f                               
0fbc: 00        -         .byte $00
0fbd: 01 01 01 01 01 01 01 01 01 01 01 01              - GameOverColor:.byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
0fc9: 01 01 01 01 01 01 01 01 01 01                    -         .byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
0fd3: 00        -         .byte $00
0fd4: 14 08 01 0e 0b 13 20 06 0f 12 20 10 0c 01 19 09  - SeeYa:  .text "thanks for playing! see ya!"
0fe4: 0e 07 21 20 13 05 05 20 19 01 21                
0fef: 00        -         .byte $00
0ff0: 01 01 01 01 01 01 01 01 01 01 01 01              - SeeYaColor:.byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
0ffc: 01 01 01 01 01 01 01 01 01 01 01 01              -         .byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
1008: 01 01 01  -         .byte vic.WHITE, vic.WHITE, vic.WHITE
100b: 00        -         .byte $00
100c: 0a 07 0d 0e 0a 07 0d 0e 0a 07 0d 0e 0a 07 0d 0e  - TitleScreenColor:.byte $0a, $07, $0d, $0e, $0a, $07, $0d, $0e, $0a, $07, $0d, $0e, $0a, $07, $0d, $0e, $0a, $07, $0d, $0e, $0a, $07, $0d, $0e
101c: 0a 07 0d 0e 0a 07 0d 0e                         
1024: 00        -         .byte $00
1025: 00 0b 0c 0f 01 0f 0c 0b                          - StartMessageColors:.byte $00, $0b, $0c, $0f, $01, $0f, $0c, $0b
102d: 55 43 43 43 43 43 43 43 43 49 55 43 43 43 43 43  - Buttons:.byte $55, $43, $43, $43, $43, $43, $43, $43, $43, $49, $55, $43, $43, $43, $43, $43, $43, $43, $43, $49, $55, $43, $43, $43, $43, $43, $43, $43, $43, $49, $55, $43, $43, $43, $43, $43, $43, $43, $43, $49
103d: 43 43 43 49 55 43 43 43 43 43 43 43 43 49 55 43 
104d: 43 43 43 43 43 43 43 49                         
1055: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
1065: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
1075: 66 66 66 66 66 66 66 5d                         
107d: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
108d: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
109d: 66 66 66 66 66 66 66 5d                         
10a5: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
10b5: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
10c5: 66 66 66 66 66 66 66 5d                         
10cd: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
10dd: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
10ed: 66 66 66 66 66 66 66 5d                         
10f5: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
1105: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
1115: 66 66 66 66 66 66 66 5d                         
111d: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
112d: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
113d: 66 66 66 66 66 66 66 5d                         
1145: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
1155: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
1165: 66 66 66 66 66 66 66 5d                         
116d: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
117d: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
118d: 66 66 66 66 66 66 66 5d                         
1195: 4a 43 43 43 43 43 43 43 43 4b 4a 43 43 43 43 43  -         .byte $4a, $43, $43, $43, $43, $43, $43, $43, $43, $4b, $4a, $43, $43, $43, $43, $43, $43, $43, $43, $4b, $4a, $43, $43, $43, $43, $43, $43, $43, $43, $4b, $4a, $43, $43, $43, $43, $43, $43, $43, $43, $4b
11a5: 43 43 43 4b 4a 43 43 43 43 43 43 43 43 4b 4a 43 
11b5: 43 43 43 43 43 43 43 4b                         
11bd: 00        -         .byte $00
11be: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01  - ButtonColors:.byte $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01
11ce: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
11de: 01 01 01 01 01 01 01 01                         
11e6: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
11f6: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
1206: 06 06 06 06 06 06 06 01                         
120e: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
121e: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
122e: 06 06 06 06 06 06 06 01                         
1236: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
1246: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
1256: 06 06 06 06 06 06 06 01                         
125e: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
126e: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
127e: 06 06 06 06 06 06 06 01                         
1286: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
1296: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
12a6: 06 06 06 06 06 06 06 01                         
12ae: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
12be: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
12ce: 06 06 06 06 06 06 06 01                         
12d6: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
12e6: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
12f6: 06 06 06 06 06 06 06 01                         
12fe: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
130e: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
131e: 06 06 06 06 06 06 06 01                         
1326: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01  -         .byte $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01
1336: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
1346: 01 01 01 01 01 01 01 01                         
134e: 00        -         .byte $00
134f: 00        - CurrentStartMessageColor:.byte $00
1350: 00        - CurrentTitleColor:.byte $00
1351: 00        - GameMode:.byte $00
1352: 00 00     - Clock:  .word $0000
1354: 00        - LastKeyboardKey:.byte $00
1355: 00 00     - Score:  .word $0000
1357: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  - GamePattern:.fill $64, $00
1377: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
1397: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
13b7: 00 00 00 00                                                                                     

[Default]
2000: a9 00     - ClearTimers:lda value
2002: 85 fb     -         sta address
2004: a9 3c     -         lda value
2006: 85 fd     -         sta address
2008: a9 03     -         lda value
200a: 85 fe     -         sta address
200c: a9 40     -         lda value
200e: 85 02     -         sta address
2010: a9 00     -         lda value
2012: 85 03     -         sta address
2014: 20 da 20  -         jsr FillMemory
2017: 60        -         rts
2018: a5 03     - CreateTimer:lda r2H
201a: 0a        -         asl
201b: 0a        -         asl
201c: 0a        -         asl
201d: aa        -         tax
201e: a5 04     -         lda value
2020: 9d 3c 03  -         sta address
2023: a5 02     -         lda value
2025: 9d 3d 03  -         sta address
2028: a5 fb     -         lda value
202a: 9d 3e 03  -         sta address
202d: a5 fc     -         lda value
202f: 9d 3f 03  -         sta address
2032: a5 fb     -         lda value
2034: 9d 40 03  -         sta address
2037: a5 fc     -         lda value
2039: 9d 41 03  -         sta address
203c: a5 fd     -         lda value
203e: 9d 42 03  -         sta address
2041: a5 fe     -         lda value
2043: 9d 43 03  -         sta address
2046: 60        -         rts
2047: a0 00     - UpdateTimers:ldy #$00
2049: 98        -         tya
204a: 0a        -         asl
204b: 0a        -         asl
204c: 0a        -         asl
204d: 85 fb     -         sta r0L
204f: aa        -         tax
2050: bd 3c 03  -         lda address
2053: c9 80     -         cmp value
2055: d0 61     -         bne location
2057: e8        -         inx
2058: bd 3c 03  -         lda value
205b: 85 05     -         sta address
205d: e8        -         inx
205e: 86 fe     -         stx r1H
2060: bd 3c 03  -         lda c64lib_timers, x // current value
2063: d0 03     -         bne !return+
2065: de 3d 03  -         dec c64lib_timers + $01, x
2068: de 3c 03  -         dec c64lib_timers, x
206b: bd 3c 03  -         lda c64lib_timers, x
206e: d0 48     -         bne !continue+
2070: bd 3d 03  -         lda c64lib_timers + $01, x
2073: d0 43     -         bne !continue+
2075: e8        -         inx
2076: e8        -         inx
2077: bd 3c 03  -         lda value
207a: 85 02     -         sta address
207c: e8        -         inx
207d: bd 3c 03  -         lda value
2080: 85 03     -         sta address
2082: a5 fe     -         lda r1H
2084: aa        -         tax
2085: a5 02     -         lda value
2087: 9d 3c 03  -         sta address
208a: e8        -         inx
208b: a5 03     -         lda value
208d: 9d 3c 03  -         sta address
2090: e8        -         inx
2091: e8        -         inx
2092: e8        -         inx
2093: 98        -         tya
2094: 48        -         pha
2095: bd 3c 03  -         lda value
2098: 85 02     -         sta address
209a: e8        -         inx
209b: bd 3c 03  -         lda value
209e: 85 03     -         sta address
20a0: 20 a6 20  -         jsr !dispatch+
20a3: 4c a9 20  -         jmp !done_dispatch+
20a6: 6c 02 00  -         jmp (r2)
20a9: 68        -         pla
20aa: a8        -         tay
20ab: a5 05     -         lda address
20ad: c9 01     -         cmp value
20af: f0 07     -         beq location
20b1: a6 fb     -         ldx r0L
20b3: a9 00     -         lda value
20b5: 9d 3c 03  -         sta address
20b8: c8        -         iny
20b9: c0 07     -         cpy #$07
20bb: d0 8c     -         bne !loop-
20bd: 60        -         rts
20be: a5 03     - EnDisTimer:lda r2H
20c0: 0a        -         asl
20c1: 0a        -         asl
20c2: 0a        -         asl
20c3: aa        -         tax
20c4: a5 04     -         lda value
20c6: 9d 3c 03  -         sta address
20c9: 60        -         rts
20ca: a5 12     - PauseJiffies:lda r7L
20cc: 18        -         clc
20cd: 6d 52 13  -         adc Clock
20d0: 85 12     -         sta r7L
20d2: ad 52 13  -         lda Clock
20d5: c5 12     -         cmp r7L
20d7: d0 f9     -         bne !-
20d9: 60        -         rts
20da: a0 00     - FillMemory:ldy #$00
20dc: a5 fb     -         lda r0L
20de: 91 fd     -         sta (r1), y
20e0: a5 02     -         lda word
20e2: d0 02     -         bne !+
20e4: c6 03     -         dec word + $01
20e6: c6 02     -         dec word
20e8: a5 03     -         lda byte1
20ea: c9 00     -         cmp #byte2
20ec: d0 04     -         bne !+
20ee: a5 02     -         lda byte1
20f0: c9 00     -         cmp #byte2
20f2: f0 08     -         beq !end+
20f4: c8        -         iny
20f5: d0 e5     -         bne !l1-
20f7: e6 fe     -         inc r1H
20f9: 4c dc 20  -         jmp !l1-
20fc: 60        -         rts
20fd: a5 02     - CopyMemory:lda r2L
20ff: 05 03     -         ora r2H
2101: f0 4d     -         beq !l7+
2103: a5 fc     -         lda address
2105: 48        -         pha
2106: a5 fb     -         lda address
2108: 48        -         pha
2109: a5 fe     -         lda address
210b: 48        -         pha
210c: a5 03     -         lda address
210e: 48        -         pha
210f: a5 04     -         lda address
2111: 48        -         pha
2112: a5 fc     -         lda byte1
2114: c5 fe     -         cmp byte2
2116: d0 04     -         bne !+
2118: a5 fb     -         lda byte1
211a: c5 fd     -         cmp byte2
211c: b0 02     -         bcs !l3+
211e: 90 31     -         bcc !l8+
2120: a0 00     -         ldy #0
2122: a5 03     -         lda r2H
2124: f0 0f     -         beq !l5+
2126: b1 fb     -         lda (r0), y
2128: 91 fd     -         sta (r1), y
212a: c8        -         iny
212b: d0 f9     -         bne !l4-
212d: e6 fc     -         inc r0H
212f: e6 fe     -         inc r1H
2131: c6 03     -         dec r2H
2133: d0 f1     -         bne !l4-
2135: c4 02     -         cpy r2L
2137: f0 08     -         beq !l6+
2139: b1 fb     -         lda (r0), y
213b: 91 fd     -         sta (r1), y
213d: c8        -         iny
213e: b8        -         clv
213f: 50 f4     -         bvc address
2141: 68        -         pla
2142: 85 04     -         sta address
2144: 68        -         pla
2145: 85 03     -         sta address
2147: 68        -         pla
2148: 85 fe     -         sta address
214a: 68        -         pla
214b: 85 fb     -         sta address
214d: 68        -         pla
214e: 85 fc     -         sta address
2150: 60        -         rts
2151: 18        -         clc
2152: a5 03     -         lda r2H
2154: 65 fc     -         adc r0H
2156: 85 fc     -         sta r0H
2158: 18        -         clc
2159: a5 03     -         lda r2H
215b: 65 fe     -         adc r1H
215d: 85 fe     -         sta r1H
215f: a4 02     -         ldy r2L
2161: f0 08     -         beq !lA+
2163: 88        -         dey
2164: b1 fb     -         lda (r0), y
2166: 91 fd     -         sta (r1), y
2168: 98        -         tya
2169: d0 f8     -         bne !l9-
216b: c6 fc     -         dec r0H
216d: c6 fe     -         dec r1H
216f: a5 03     -         lda r2H
2171: f0 ce     -         beq !l6-
2173: 88        -         dey
2174: b1 fb     -         lda (r0), y
2176: 91 fd     -         sta (r1), y
2178: 98        -         tya
2179: d0 f8     -         bne !lB-
217b: c6 03     -         dec r2H
217d: b8        -         clv
217e: 50 eb     -         bvc address
2180: a2 18     - InitSound:ldx #$18
2182: a9 00     -         lda #$00
2184: 9d 00 d4  -         sta sid.FRELO1, x
2187: ca        -         dex
2188: 10 fa     -         bpl !-
218a: a9 0f     -         lda value
218c: 8d 18 d4  -         sta address
218f: a9 22     -         lda value
2191: 8d 05 d4  -         sta address
2194: a9 80     -         lda value
2196: 8d 06 d4  -         sta address
2199: 60        -         rts
219a: 48        - PlaySound:pha
219b: aa        -         tax
219c: bd dd 21  -         lda Waveforms, x
219f: 8d e2 21  -         sta CurrentWaveform
21a2: 68        -         pla
21a3: 0a        -         asl
21a4: aa        -         tax
21a5: bd d3 21  -         lda Notes, x
21a8: 8d 01 d4  -         sta sid.FREHI1
21ab: bd d4 21  -         lda Notes + 1, x
21ae: 8d 00 d4  -         sta sid.FRELO1
21b1: ad e2 21  -         lda CurrentWaveform
21b4: 8d 04 d4  -         sta sid.VCREG1
21b7: a9 01     -         lda #sid.SOUND_PLAYING
21b9: 8d e3 21  -         sta SoundPlaying
21bc: 60        -         rts
21bd: ad e3 21  - StopSound:lda SoundPlaying
21c0: c9 01     -         cmp #sid.SOUND_PLAYING
21c2: d0 0e     -         bne !+
21c4: ce e2 21  -         dec CurrentWaveform
21c7: ad e2 21  -         lda CurrentWaveform
21ca: 8d 04 d4  -         sta sid.VCREG1
21cd: a9 00     -         lda #$00
21cf: 8d e3 21  -         sta SoundPlaying
21d2: 60        -         rts
21d3: 08 61     - Notes:  .byte 8,97      // Fail
21d5: 0c 8f     -         .byte 12,143    // G blue
21d7: 10 c3     -         .byte 16,195    // C yellow
21d9: 15 1f     -         .byte 21,31     // E red
21db: 19 1e     -         .byte 25,30     // G green
21dd: 81 11 11 11 11                                   - Waveforms:.byte sid.WAVE_NOISE, sid.WAVE_TRIANGLE, sid.WAVE_TRIANGLE, sid.WAVE_TRIANGLE, sid.WAVE_TRIANGLE
21e2: 00        - CurrentWaveform:.byte $00
21e3: 00        - SoundPlaying:.byte $00

[Keyboard Scan Routine]
21e4: 4c 4d 22  - Keyboard:jmp Main
21e7: 0a        - KeyInRow:asl
21e8: b0 03     -         bcs *+5
21ea: 20 1f 22  -         jsr KeyFound
21ed: e8        -         inx
21ee: 0a        -         asl
21ef: b0 03     -         bcs *+5
21f1: 20 1f 22  -         jsr KeyFound
21f4: e8        -         inx
21f5: 0a        -         asl
21f6: b0 03     -         bcs *+5
21f8: 20 1f 22  -         jsr KeyFound
21fb: e8        -         inx
21fc: 0a        -         asl
21fd: b0 03     -         bcs *+5
21ff: 20 1f 22  -         jsr KeyFound
2202: e8        -         inx
2203: 0a        -         asl
2204: b0 03     -         bcs *+5
2206: 20 1f 22  -         jsr KeyFound
2209: e8        -         inx
220a: 0a        -         asl
220b: b0 03     -         bcs *+5
220d: 20 1f 22  -         jsr KeyFound
2210: e8        -         inx
2211: 0a        -         asl
2212: b0 03     -         bcs *+5
2214: 20 1f 22  -         jsr KeyFound
2217: e8        -         inx
2218: 0a        -         asl
2219: b0 03     -         bcs *+5
221b: 20 1f 22  -         jsr KeyFound
221e: 60        -         rts
221f: 86 5e     - KeyFound:stx TempZP
2221: c6 5b     -         dec KeyQuantity
2223: 30 0a     -         bmi OverFlow
2225: bc a2 23  -         ldy KeyTable,x
2228: a6 5b     -         ldx KeyQuantity
222a: 94 58     -         sty BufferNew,x
222c: a6 5e     -         ldx TempZP
222e: 60        -         rts
222f: 68        - OverFlow:pla  // Dirty hack to handle 2 layers of JSR
2230: 68        -         pla
2231: 68        -         pla
2232: 68        -         pla
2233: a9 03     -         lda #$03
2235: 38        -         sec
2236: 60        -         rts
2237: a9 00     - NoActivityDetected:lda #$00
2239: 8d ea 23  -         sta SimultaneousAlphanumericKeysFlag  // Clear the too many keys flag once a "no activity" state is detected.
223c: 8e e2 23  -         stx BufferOld
223f: 8e e3 23  -         stx BufferOld+1
2242: 8e e4 23  -         stx BufferOld+2
2245: 38        -         sec
2246: a9 01     -         lda #$01
2248: 60        -         rts
2249: 38        - ControlPort:sec
224a: a9 02     -         lda #$02
224c: 60        -         rts
224d: a2 ff     - Main:   ldx #$ff
224f: 8e 02 dc  -         stx $dc02       // Port A - Output
2252: a0 00     -         ldy #$00
2254: 8c 03 dc  -         sty $dc03       // Port B - Input
2257: 8c 00 dc  -         sty $dc00       // Connect all Keyboard Rows
225a: ec 01 dc  -         cpx $dc01
225d: f0 d8     -         beq NoActivityDetected
225f: ad ea 23  -         lda SimultaneousAlphanumericKeysFlag
2262: f0 04     -         beq !+
2264: a9 05     -         lda #$05
2266: 38        -         sec
2267: 60        -         rts
2268: 8e 00 dc  -         stx $dc00       // Disconnect all Keyboard Rows
226b: ec 01 dc  -         cpx $dc01       // Only Control Port activity will be detected
226e: d0 d9     -         bne ControlPort
2270: a9 fe     -         lda #%11111110
2272: 8d 00 dc  -         sta $dc00
2275: ac 01 dc  -         ldy $dc01
2278: 84 57     -         sty ScanResult+7
227a: 38        -         sec
227b: 2a        -         rol
227c: 8d 00 dc  -         sta $dc00
227f: ac 01 dc  -         ldy $dc01
2282: 84 56     -         sty ScanResult+i
2284: 2a        -         rol
2285: 8d 00 dc  -         sta $dc00
2288: ac 01 dc  -         ldy $dc01
228b: 84 55     -         sty ScanResult+i
228d: 2a        -         rol
228e: 8d 00 dc  -         sta $dc00
2291: ac 01 dc  -         ldy $dc01
2294: 84 54     -         sty ScanResult+i
2296: 2a        -         rol
2297: 8d 00 dc  -         sta $dc00
229a: ac 01 dc  -         ldy $dc01
229d: 84 53     -         sty ScanResult+i
229f: 2a        -         rol
22a0: 8d 00 dc  -         sta $dc00
22a3: ac 01 dc  -         ldy $dc01
22a6: 84 52     -         sty ScanResult+i
22a8: 2a        -         rol
22a9: 8d 00 dc  -         sta $dc00
22ac: ac 01 dc  -         ldy $dc01
22af: 84 51     -         sty ScanResult+i
22b1: 2a        -         rol
22b2: 8d 00 dc  -         sta $dc00
22b5: ac 01 dc  -         ldy $dc01
22b8: 84 50     -         sty ScanResult+i
22ba: 8e 00 dc  -         stx $dc00       // Disconnect all Keyboard Rows
22bd: ec 01 dc  -         cpx $dc01       // Only Control Port activity will be detected
22c0: d0 87     -         bne ControlPort
22c2: 86 58     -         stx BufferNew
22c4: 86 59     -         stx BufferNew+1
22c6: 86 5a     -         stx BufferNew+2
22c8: e8        -         inx
22c9: 86 5d     -         stx NonAlphaFlagY
22cb: a9 03     -         lda #MaxKeyRollover
22cd: 85 5b     -         sta KeyQuantity
22cf: a9 fe     -         lda #$fe
22d1: 85 5f     -         sta SimultaneousKeys
22d3: a5 56     -         lda ScanResult+6
22d5: 49 ff     -         eor #$ff
22d7: 29 80     -         and #%10000000     // Left Shift
22d9: 4a        -         lsr
22da: 85 5d     -         sta NonAlphaFlagY
22dc: a5 50     -         lda ScanResult+0
22de: 49 ff     -         eor #$ff
22e0: 29 a4     -         and #%10100100     // RUN STOP - C= - CTRL
22e2: 05 5d     -         ora NonAlphaFlagY
22e4: 85 5d     -         sta NonAlphaFlagY
22e6: a5 51     -         lda ScanResult+1
22e8: 49 ff     -         eor #$ff
22ea: 29 18     -         and #%00011000     // Right SHIFT - CLR HOME
22ec: 05 5d     -         ora NonAlphaFlagY
22ee: 85 5d     -         sta NonAlphaFlagY
22f0: a5 57     -         lda ScanResult+7  // The rest
22f2: 49 ff     -         eor #$ff
22f4: 85 5c     -         sta NonAlphaFlagX
22f6: a5 57     -         lda ScanResult+7
22f8: c9 ff     -         cmp #$ff
22fa: f0 03     -         beq *+5
22fc: 20 e7 21  -         jsr KeyInRow
22ff: a2 08     -         ldx #[7-i]*8
2301: a5 56     -         lda ScanResult+i
2303: f0 03     -         beq *+5
2305: 20 e7 21  -         jsr KeyInRow
2308: a2 10     -         ldx #[7-i]*8
230a: a5 55     -         lda ScanResult+i
230c: f0 03     -         beq *+5
230e: 20 e7 21  -         jsr KeyInRow
2311: a2 18     -         ldx #[7-i]*8
2313: a5 54     -         lda ScanResult+i
2315: f0 03     -         beq *+5
2317: 20 e7 21  -         jsr KeyInRow
231a: a2 20     -         ldx #[7-i]*8
231c: a5 53     -         lda ScanResult+i
231e: f0 03     -         beq *+5
2320: 20 e7 21  -         jsr KeyInRow
2323: a2 28     -         ldx #[7-i]*8
2325: a5 52     -         lda ScanResult+i
2327: f0 03     -         beq *+5
2329: 20 e7 21  -         jsr KeyInRow
232c: a2 30     -         ldx #[7-i]*8
232e: a5 51     -         lda ScanResult+i
2330: f0 03     -         beq *+5
2332: 20 e7 21  -         jsr KeyInRow
2335: a2 38     -         ldx #[7-i]*8
2337: a5 50     -         lda ScanResult+i
2339: f0 03     -         beq *+5
233b: 20 e7 21  -         jsr KeyInRow
233e: a2 02     -         ldx #MaxKeyRollover-1
2340: b5 58     -         lda BufferNew,x
2342: c9 ff     -         cmp #$ff
2344: f0 1c     -         beq Exist        // Handle 'null' values
2346: cd e2 23  -         cmp BufferOld
2349: f0 17     -         beq Exist
234b: cd e3 23  -         cmp BufferOld+1
234e: f0 12     -         beq Exist
2350: cd e4 23  -         cmp BufferOld+2
2353: f0 0d     -         beq Exist
2355: ee e9 23  -         inc BufferQuantity
2358: ac e9 23  -         ldy BufferQuantity
235b: 99 e5 23  -         sta Buffer,y
235e: e6 5f     -         inc SimultaneousKeys
2360: f0 34     -         beq TooManyNewKeys
2362: ca        - Exist:  dex
2363: 10 db     -         bpl !-
2365: ac e9 23  -         ldy BufferQuantity
2368: 30 15     -         bmi BufferEmpty
236a: ce e9 23  -         dec BufferQuantity
236d: ad e5 23  -         lda Buffer
2370: ae e6 23  -         ldx Buffer+1
2373: 8e e5 23  -         stx Buffer
2376: ae e7 23  -         ldx Buffer+2
2379: 8e e6 23  -         stx Buffer+1
237c: 4c 81 23  -         jmp Return
237f: a9 ff     - BufferEmpty:lda #$ff
2381: 18        - Return: clc
2382: a6 58     -         ldx BufferNew
2384: 8e e2 23  -         stx BufferOld
2387: a6 59     -         ldx BufferNew+1
2389: 8e e3 23  -         stx BufferOld+1
238c: a6 5a     -         ldx BufferNew+2
238e: 8e e4 23  -         stx BufferOld+2
2391: a6 5c     -         ldx NonAlphaFlagX
2393: a4 5d     -         ldy NonAlphaFlagY
2395: 60        -         rts
2396: 38        - TooManyNewKeys:sec
2397: a9 ff     -         lda #$ff
2399: 8d e9 23  -         sta BufferQuantity
239c: 8d ea 23  -         sta SimultaneousAlphanumericKeysFlag
239f: a9 04     -         lda #$04
23a1: 60        -         rts
23a2: ff ff ff ff ff ff ff ff                          - KeyTable:.byte $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff  // CRSR DOWN, F5, F3, F1, F7, CRSR RIGHT, RETURN, INST DEL
23aa: ff 05 13 1a 34 01 17 33                          -         .byte $ff, $05, $13, $1a, $34, $01, $17, $33  // LEFT SHIFT, "E", "S", "Z", "4", "A", "W", "3"
23b2: 18 14 06 03 36 04 12 35                          -         .byte $18, $14, $06, $03, $36, $04, $12, $35  // "X", "T", "F", "C", "6", "D", "R", "5"
23ba: 16 15 08 02 38 07 19 37                          -         .byte $16, $15, $08, $02, $38, $07, $19, $37  // "V", "U", "H", "B", "8", "G", "Y", "7"
23c2: 0e 0f 0b 0d 30 0a 09 39                          -         .byte $0e, $0f, $0b, $0d, $30, $0a, $09, $39  // "N", "O" (Oscar), "K", "M", "0" (Zero), "J", "I", "9"
23ca: 2c 00 3a 2e 2d 0c 10 2b                          -         .byte $2c, $00, $3a, $2e, $2d, $0c, $10, $2b  // ",", "@", ":", ".", "-", "L", "P", "+"
23d2: 2f 1e 3d ff ff 3b 2a 1c                          -         .byte $2f, $1e, $3d, $ff, $ff, $3b, $2a, $1c  // "/", "^", "=", RIGHT SHIFT, HOME, ";", "*", "£"
23da: ff 11 ff 20 32 ff 1f 31                          -         .byte $ff, $11, $ff, $20, $32, $ff, $1f, $31  // RUN STOP, "Q", "C=" (CMD), " " (SPC), "2", "CTRL", "<-", "1"
23e2: ff ff ff  - BufferOld:.byte $ff, $ff, $ff
23e5: ff ff ff ff                                      - Buffer: .byte $ff, $ff, $ff, $ff
23e9: ff        - BufferQuantity:.byte $ff
23ea: 00        - SimultaneousAlphanumericKeysFlag:.byte $00
23eb: ad 1b d4  - GenerateRandom:lda $d41b
23ee: 29 03     -         and #$03
23f0: 18        -         clc
23f1: 69 01     -         adc #$01
23f3: 60        -         rts
23f4: a9 ff     - InitRandom:lda value
23f6: 8d 0e d4  -         sta address
23f9: a9 ff     -         lda value
23fb: 8d 0f d4  -         sta address
23fe: a9 80     -         lda value
2400: 8d 12 d4  -         sta address
2403: 60        -         rts
2404: ad e3 24  - ButtonWithSound:lda ButtonLit
2407: c9 00     -         cmp #$00
2409: d0 12     -         bne !+
240b: a5 03     -         lda r2H
240d: 8d e3 24  -         sta ButtonLit
2410: 20 9a 21  -         jsr PlaySound
2413: a6 03     -         ldx r2H
2415: a9 01     -         lda #vic.WHITE
2417: 9d 26 d0  -         sta vic.SPMC1, x
241a: 20 65 24  -         jsr TurnButtonOn
241d: 60        -         rts
241e: 20 ca 20  - ButtonHold:jsr PauseJiffies
2421: 20 bd 21  -         jsr StopSound
2424: 20 2f 24  -         jsr AllOff
2427: a5 13     -         lda value
2429: 85 12     -         sta address
242b: 20 ca 20  -         jsr PauseJiffies
242e: 60        -         rts
242f: a9 18     - AllOff: lda value
2431: 85 08     -         sta address
2433: a9 05     -         lda value
2435: 85 09     -         sta address
2437: a9 2d     -         lda value
2439: 85 10     -         sta address
243b: a9 10     -         lda value
243d: 85 11     -         sta address
243f: 20 f5 0b  -         jsr WriteString
2442: a9 18     -         lda value
2444: 85 08     -         sta address
2446: a9 d9     -         lda value
2448: 85 09     -         sta address
244a: a9 be     -         lda value
244c: 85 10     -         sta address
244e: a9 11     -         lda value
2450: 85 11     -         sta address
2452: 20 f5 0b  -         jsr WriteString
2455: a2 04     -         ldx #$04
2457: a9 0b     -         lda #vic.DK_GRAY
2459: 9d 26 d0  -         sta vic.SPMC1, x
245c: ca        -         dex
245d: d0 fa     -         bne !-
245f: a9 00     -         lda value
2461: 8d e3 24  -         sta address
2464: 60        -         rts
2465: a5 03     - TurnButtonOn:lda r2H
2467: c9 01     -         cmp #$01
2469: d0 0f     -         bne !+
246b: a9 41     -         lda value
246d: 85 18     -         sta address
246f: a9 05     -         lda value
2471: 85 19     -         sta address
2473: a9 0a     -         lda value
2475: 85 14     -         sta address
2477: 4c b0 24  -         jmp !++++
247a: c9 02     -         cmp #$02
247c: d0 0f     -         bne !+
247e: a9 4b     -         lda value
2480: 85 18     -         sta address
2482: a9 05     -         lda value
2484: 85 19     -         sta address
2486: a9 07     -         lda value
2488: 85 14     -         sta address
248a: 4c b0 24  -         jmp !+++
248d: c9 03     -         cmp #$03
248f: d0 0f     -         bne !+
2491: a9 55     -         lda value
2493: 85 18     -         sta address
2495: a9 05     -         lda value
2497: 85 19     -         sta address
2499: a9 0d     -         lda value
249b: 85 14     -         sta address
249d: 4c b0 24  -         jmp !++
24a0: c9 04     -         cmp #$04
24a2: d0 0c     -         bne !+
24a4: a9 5f     -         lda value
24a6: 85 18     -         sta address
24a8: a9 05     -         lda value
24aa: 85 19     -         sta address
24ac: a9 0e     -         lda value
24ae: 85 14     -         sta address
24b0: 20 b4 24  -         jsr LightButton
24b3: 60        -         rts
24b4: a2 00     - LightButton:ldx #$00
24b6: a0 00     -         ldy #$00
24b8: a9 a0     -         lda #$a0
24ba: 91 18     -         sta (r10), y
24bc: a5 18     -         lda r10L
24be: 85 16     -         sta r9L
24c0: a5 19     -         lda r10H
24c2: 18        -         clc
24c3: 69 d4     -         adc #$d4
24c5: 85 17     -         sta r9H
24c7: a5 14     -         lda r8L
24c9: 91 16     -         sta (r9), y
24cb: c8        -         iny
24cc: c0 08     -         cpy #$08
24ce: d0 e8     -         bne !-
24d0: a0 00     -         ldy #$00
24d2: 18        -         clc
24d3: a5 18     -         lda r10L
24d5: 69 28     -         adc #$28
24d7: 85 18     -         sta r10L
24d9: 90 02     -         bcc !+
24db: e6 19     -         inc r10H
24dd: e8        -         inx
24de: e0 08     -         cpx #$08
24e0: d0 d6     -         bne !--
24e2: 60        -         rts
24e3: 00        - ButtonLit:.byte $00
