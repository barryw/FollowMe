******************************* Segment: Default *******************************
[Basic]
0801: 0b 08     -         
0803: 0a 00     -         
0805: 9e        -         
0806: 32 30 36 32                                      -         
080a: 00        -         
080b: 00 00     - upstartEnd:

[Basic End]
080e: 20 82 21  - Main:   jsr InitSound
0811: 20 f6 23  -         jsr InitRandom
0814: 20 02 20  -         jsr ClearTimers
0817: 20 f5 08  -         jsr SetupTimers
081a: 20 60 09  -         jsr SetupScreen
081d: 20 5e 08  -         jsr SetupSprites
0820: 20 2b 08  -         jsr SetupInterrupt
0823: a9 00     -         lda value
0825: 8d 5c 13  -         sta address
0828: 4c b8 09  -         jmp GameLoop
082b: 78        - SetupInterrupt:sei
082c: a9 7f     -         lda #LOWER7
082e: 8d 0d dc  -         sta vic.CIAICR
0831: 8d 0d dd  -         sta vic.CI2ICR
0834: ad 0d dc  -         lda vic.CIAICR
0837: ad 0d dd  -         lda vic.CI2ICR
083a: a9 01     -         lda #$01
083c: 8d 19 d0  -         sta vic.VICIRQ
083f: 8d 1a d0  -         sta vic.IRQMSK
0842: a9 00     -         lda value
0844: 8d 12 d0  -         sta address
0847: a9 1b     -         lda value
0849: 8d 11 d0  -         sta address
084c: a9 35     -         lda value
084e: 85 01     -         sta address
0850: 48        -         pha
0851: a9 34     -         lda #<word
0853: 8d fe ff  -         sta address
0856: a9 09     -         lda #>word
0858: 8d ff ff  -         sta address + $01
085b: 68        -         pla
085c: 58        -         cli
085d: 60        -         rts
085e: a9 00     - SetupSprites:lda value
0860: 8d 26 d0  -         sta address
0863: a9 0b     -         lda #vic.DK_GRAY
0865: 8d 27 d0  -         sta vic.SP0COL
0868: 8d 28 d0  -         sta vic.SP1COL
086b: 8d 29 d0  -         sta vic.SP2COL
086e: 8d 2a d0  -         sta vic.SP3COL
0871: a9 01     -         lda #vic.WHITE
0873: 8d 2b d0  -         sta vic.SP4COL
0876: 8d 2c d0  -         sta vic.SP5COL
0879: 8d 2d d0  -         sta vic.SP6COL
087c: 8d 2e d0  -         sta vic.SP7COL
087f: a9 33     -         lda value
0881: 8d f8 07  -         sta address
0884: a9 34     -         lda value
0886: 8d f9 07  -         sta address
0889: a9 35     -         lda value
088b: 8d fa 07  -         sta address
088e: a9 36     -         lda value
0890: 8d fb 07  -         sta address
0893: a9 32     -         lda #SPRITES+$00
0895: 8d fc 07  -         sta SPRITE_POINTERS + $04
0898: 8d fd 07  -         sta SPRITE_POINTERS + $05
089b: 8d fe 07  -         sta SPRITE_POINTERS + $06
089e: 8d ff 07  -         sta SPRITE_POINTERS + $07
08a1: a9 f0     -         lda value
08a3: 8d 15 d0  -         sta address
08a6: a9 ff     -         lda value
08a8: 8d 1c d0  -         sta address
08ab: a9 87     -         lda #135
08ad: 8d 01 d0  -         sta vic.SP0Y
08b0: 8d 03 d0  -         sta vic.SP1Y
08b3: 8d 05 d0  -         sta vic.SP2Y
08b6: 8d 07 d0  -         sta vic.SP3Y
08b9: a9 50     -         lda #80
08bb: 8d 09 d0  -         sta vic.SP4Y
08be: 8d 0b d0  -         sta vic.SP5Y
08c1: 8d 0d d0  -         sta vic.SP6Y
08c4: 8d 0f d0  -         sta vic.SP7Y
08c7: a9 84     -         lda value
08c9: 8d 08 d0  -         sta address
08cc: a9 9e     -         lda value
08ce: 8d 0a d0  -         sta address
08d1: a9 b8     -         lda value
08d3: 8d 0c d0  -         sta address
08d6: a9 d2     -         lda value
08d8: 8d 0e d0  -         sta address
08db: a9 34     -         lda value
08dd: 8d 00 d0  -         sta address
08e0: a9 84     -         lda value
08e2: 8d 02 d0  -         sta address
08e5: a9 d4     -         lda value
08e7: 8d 04 d0  -         sta address
08ea: a9 08     -         lda value
08ec: 8d 10 d0  -         sta address
08ef: a9 23     -         lda value
08f1: 8d 06 d0  -         sta address
08f4: 60        -         rts
08f5: a9 0a     - SetupTimers:lda value
08f7: 85 fb     -         sta address
08f9: a9 00     -         lda value
08fb: 85 fc     -         sta address
08fd: a9 23     -         lda value
08ff: 85 fd     -         sta address
0901: a9 0c     -         lda value
0903: 85 fe     -         sta address
0905: a9 01     -         lda value
0907: 85 02     -         sta address
0909: a9 02     -         lda value
090b: 85 03     -         sta address
090d: a9 80     -         lda value
090f: 85 04     -         sta address
0911: 20 1a 20  -         jsr CreateTimer
0914: a9 1e     -         lda value
0916: 85 fb     -         sta address
0918: a9 00     -         lda value
091a: 85 fc     -         sta address
091c: a9 c2     -         lda value
091e: 85 fd     -         sta address
0920: a9 0b     -         lda value
0922: 85 fe     -         sta address
0924: a9 01     -         lda value
0926: 85 02     -         sta address
0928: a9 03     -         lda value
092a: 85 03     -         sta address
092c: a9 80     -         lda value
092e: 85 04     -         sta address
0930: 20 1a 20  -         jsr CreateTimer
0933: 60        -         rts
0934: 08        - Irq:    php
0935: 48        -         pha
0936: 8a        -         txa
0937: 48        -         pha
0938: 98        -         tya
0939: 48        -         pha
093a: 20 49 20  -         jsr UpdateTimers
093d: ad 5c 13  -         lda GameMode
0940: c9 00     -         cmp #GAME_MODE_ATTRACT
0942: d0 08     -         bne !+
0944: 20 e6 21  -         jsr Keyboard
0947: b0 03     -         bcs !+
0949: 8d 5f 13  -         sta LastKeyboardKey
094c: ee 5d 13  -         inc Clock
094f: d0 03     -         bne !+
0951: ee 5e 13  -         inc Clock + $01
0954: a9 ff     -         lda #$ff
0956: 8d 19 d0  -         sta vic.VICIRQ
0959: 68        -         pla
095a: a8        -         tay
095b: 68        -         pla
095c: aa        -         tax
095d: 68        -         pla
095e: 28        -         plp
095f: 40        -         rti
0960: a9 00     - SetupScreen:lda #vic.BLACK
0962: 8d 20 d0  -         sta vic.EXTCOL
0965: 8d 21 d0  -         sta vic.BGCOL0
0968: a9 20     -         lda #clearByte
096a: a2 00     -         ldx #0
096c: 9d 00 04  -         sta screen, x
096f: 9d 00 05  -         sta screen + $100, x
0972: 9d 00 06  -         sta screen + $200, x
0975: 9d 00 07  -         sta screen + $300, x
0978: e8        -         inx
0979: d0 f1     -         bne !-
097b: a9 01     -         lda #clearByte
097d: a2 00     -         ldx #0
097f: 9d 00 d8  -         sta $d800, x
0982: 9d 00 d9  -         sta $d800 + $100, x
0985: 9d 00 da  -         sta $d800 + $200, x
0988: 9d 00 db  -         sta $d800 + $300, x
098b: e8        -         inx
098c: d0 f1     -         bne !-
098e: a9 36     -         lda value
0990: 85 08     -         sta address
0992: a9 04     -         lda value
0994: 85 09     -         sta address
0996: a9 22     -         lda value
0998: 85 10     -         sta address
099a: a9 0f     -         lda value
099c: 85 11     -         sta address
099e: 20 03 0c  -         jsr WriteString
09a1: a9 36     -         lda value
09a3: 85 08     -         sta address
09a5: a9 d8     -         lda value
09a7: 85 09     -         sta address
09a9: a9 17     -         lda value
09ab: 85 10     -         sta address
09ad: a9 10     -         lda value
09af: 85 11     -         sta address
09b1: 20 03 0c  -         jsr WriteString
09b4: 20 2a 24  -         jsr AllOff
09b7: 60        -         rts
09b8: 20 ce 0b  - GameLoop:jsr UpdateScore
09bb: ad 5c 13  -         lda GameMode
09be: c9 00     -         cmp #GAME_MODE_ATTRACT
09c0: d0 06     -         bne CheckComputer
09c2: 20 72 0b  -         jsr Attract
09c5: 4c bb 09  -         jmp !-
09c8: c9 01     - CheckComputer:cmp #GAME_MODE_COMPUTER                 // Is it the computer's turn?
09ca: d0 72     -         bne CheckHuman
09cc: 20 16 0c  -         jsr ClearLine
09cf: a9 26     -         lda value
09d1: 85 08     -         sta address
09d3: a9 07     -         lda value
09d5: 85 09     -         sta address
09d7: a9 2f     -         lda value
09d9: 85 10     -         sta address
09db: a9 0f     -         lda value
09dd: 85 11     -         sta address
09df: 20 03 0c  -         jsr WriteString
09e2: a9 26     -         lda value
09e4: 85 08     -         sta address
09e6: a9 db     -         lda value
09e8: 85 09     -         sta address
09ea: a9 4b     -         lda value
09ec: 85 10     -         sta address
09ee: a9 0f     -         lda value
09f0: 85 11     -         sta address
09f2: 20 03 0c  -         jsr WriteString
09f5: a9 40     -         lda value
09f7: 85 12     -         sta address
09f9: 20 cc 20  -         jsr PauseJiffies
09fc: a2 00     -         ldx #$00
09fe: 86 15     -         stx r8H
0a00: a6 15     -         ldx r8H
0a02: bd 63 13  -         lda GamePattern, x                      // Get the current note
0a05: c9 00     -         cmp #$00                                // Have we reached the end of the pattern?
0a07: f0 16     -         beq !+
0a09: 85 03     -         sta r2H
0a0b: ad 62 13  -         lda value
0a0e: 85 12     -         sta address
0a10: a9 05     -         lda value
0a12: 85 13     -         sta address
0a14: 20 06 24  -         jsr ButtonWithSound
0a17: 20 19 24  -         jsr ButtonHold
0a1a: e6 15     -         inc r8H
0a1c: 4c 00 0a  -         jmp !-
0a1f: 20 ed 23  -         jsr GenerateRandom                      // Generate a new note and tack it onto the end of the pattern
0a22: 9d 63 13  -         sta GamePattern, x
0a25: 85 03     -         sta r2H
0a27: ad 62 13  -         lda value
0a2a: 85 12     -         sta address
0a2c: a9 05     -         lda value
0a2e: 85 13     -         sta address
0a30: 20 06 24  -         jsr ButtonWithSound
0a33: 20 19 24  -         jsr ButtonHold
0a36: a9 02     -         lda value
0a38: 8d 5c 13  -         sta address
0a3b: 4c b8 09  -         jmp GameLoop
0a3e: c9 02     - CheckHuman:cmp #GAME_MODE_HUMAN                    // Is it the human's turn?
0a40: f0 03     -         beq !+
0a42: 4c cd 0a  -         jmp CheckFail
0a45: 20 16 0c  -         jsr ClearLine
0a48: a9 22     -         lda value
0a4a: 85 08     -         sta address
0a4c: a9 07     -         lda value
0a4e: 85 09     -         sta address
0a50: a9 67     -         lda value
0a52: 85 10     -         sta address
0a54: a9 0f     -         lda value
0a56: 85 11     -         sta address
0a58: 20 03 0c  -         jsr WriteString
0a5b: a9 22     -         lda value
0a5d: 85 08     -         sta address
0a5f: a9 db     -         lda value
0a61: 85 09     -         sta address
0a63: a9 8c     -         lda value
0a65: 85 10     -         sta address
0a67: a9 0f     -         lda value
0a69: 85 11     -         sta address
0a6b: 20 03 0c  -         jsr WriteString
0a6e: a2 00     -         ldx #$00
0a70: 86 15     -         stx r8H
0a72: a6 15     -         ldx r8H
0a74: bd 63 13  -         lda GamePattern, x                      // Grab the move in the pattern so that we can make sure the human plays the same note
0a77: 85 22     -         sta r12L
0a79: c9 00     -         cmp #$00                                // End of the pattern?
0a7b: d0 08     -         bne !+
0a7d: a9 01     -         lda value
0a7f: 8d 5c 13  -         sta address
0a82: 4c b8 09  -         jmp GameLoop
0a85: 20 e6 21  -         jsr Keyboard
0a88: b0 fb     -         bcs !-
0a8a: 38        -         sec
0a8b: e9 31     -         sbc #$31
0a8d: c9 04     -         cmp #$04
0a8f: b0 29     -         bcs !++
0a91: 18        -         clc
0a92: 69 01     -         adc #$01
0a94: c5 22     -         cmp r12L                                // Is this the right note?
0a96: f0 08     -         beq !+
0a98: a9 03     -         lda value
0a9a: 8d 5c 13  -         sta address
0a9d: 4c b8 09  -         jmp GameLoop
0aa0: 85 03     -         sta r2H
0aa2: 20 06 24  -         jsr ButtonWithSound
0aa5: f8        -         sed
0aa6: ad 61 13  -         lda Score + $01
0aa9: 18        -         clc
0aaa: 69 10     -         adc #$10                                // Add 10 points
0aac: 8d 61 13  -         sta Score + $01
0aaf: 90 09     -         bcc !+
0ab1: ad 60 13  -         lda Score
0ab4: 18        -         clc
0ab5: 69 01     -         adc #$01
0ab7: 8d 60 13  -         sta Score
0aba: d8        -         cld
0abb: 20 e6 21  -         jsr Keyboard                            // Wait for button to be released
0abe: c9 ff     -         cmp #$ff
0ac0: f0 f8     -         beq !-
0ac2: 20 2a 24  -         jsr AllOff
0ac5: 20 bf 21  -         jsr StopSound
0ac8: e6 15     -         inc r8H
0aca: 4c 72 0a  -         jmp !----
0acd: c9 03     - CheckFail:cmp #GAME_MODE_FAIL
0acf: d0 29     -         bne CheckGameOver
0ad1: a9 00     -         lda #$00
0ad3: 8d 60 13  -         sta Score
0ad6: 8d 61 13  -         sta Score + $01
0ad9: a5 22     -         lda r12L
0adb: 85 03     -         sta r2H
0add: 20 60 24  -         jsr TurnButtonOn
0ae0: a9 00     -         lda #$00
0ae2: 20 9c 21  -         jsr PlaySound
0ae5: a9 40     -         lda value
0ae7: 85 12     -         sta address
0ae9: 20 cc 20  -         jsr PauseJiffies
0aec: 20 bf 21  -         jsr StopSound
0aef: 20 2a 24  -         jsr AllOff
0af2: a9 04     -         lda value
0af4: 8d 5c 13  -         sta address
0af7: 4c b8 09  -         jmp GameLoop
0afa: c9 04     - CheckGameOver:cmp #GAME_MODE_GAME_OVER
0afc: d0 71     -         bne !++++
0afe: 20 16 0c  -         jsr ClearLine
0b01: a9 29     -         lda value
0b03: 85 08     -         sta address
0b05: a9 07     -         lda value
0b07: 85 09     -         sta address
0b09: a9 b1     -         lda value
0b0b: 85 10     -         sta address
0b0d: a9 0f     -         lda value
0b0f: 85 11     -         sta address
0b11: 20 03 0c  -         jsr WriteString
0b14: a9 29     -         lda value
0b16: 85 08     -         sta address
0b18: a9 db     -         lda value
0b1a: 85 09     -         sta address
0b1c: a9 c8     -         lda value
0b1e: 85 10     -         sta address
0b20: a9 0f     -         lda value
0b22: 85 11     -         sta address
0b24: 20 03 0c  -         jsr WriteString
0b27: 20 e6 21  -         jsr Keyboard
0b2a: b0 fb     -         bcs !-
0b2c: c9 19     -         cmp #$19
0b2e: f0 30     -         beq !+
0b30: 20 16 0c  -         jsr ClearLine
0b33: a9 26     -         lda value
0b35: 85 08     -         sta address
0b37: a9 07     -         lda value
0b39: 85 09     -         sta address
0b3b: a9 df     -         lda value
0b3d: 85 10     -         sta address
0b3f: a9 0f     -         lda value
0b41: 85 11     -         sta address
0b43: 20 03 0c  -         jsr WriteString
0b46: a9 26     -         lda value
0b48: 85 08     -         sta address
0b4a: a9 db     -         lda value
0b4c: 85 09     -         sta address
0b4e: a9 fb     -         lda value
0b50: 85 10     -         sta address
0b52: a9 0f     -         lda value
0b54: 85 11     -         sta address
0b56: 20 03 0c  -         jsr WriteString
0b59: a9 37     -         lda value
0b5b: 85 01     -         sta address
0b5d: 6c fc ff  -         jmp (kernal.VEC_RESET)
0b60: a9 00     -         lda value
0b62: 8d 5c 13  -         sta address
0b65: a2 63     -         ldx #$63
0b67: a9 00     -         lda #$00
0b69: 9d 63 13  -         sta GamePattern, x
0b6c: ca        -         dex
0b6d: 10 fa     -         bpl !-
0b6f: 4c b8 09  -         jmp GameLoop
0b72: 20 16 0c  - Attract:jsr ClearLine
0b75: a9 23     -         lda value
0b77: 85 08     -         sta address
0b79: a9 07     -         lda value
0b7b: 85 09     -         sta address
0b7d: a9 00     -         lda value
0b7f: 85 10     -         sta address
0b81: a9 0f     -         lda value
0b83: 85 11     -         sta address
0b85: 20 03 0c  -         jsr WriteString
0b88: 20 e6 21  -         jsr Keyboard
0b8b: b0 fb     -         bcs !-
0b8d: 38        -         sec
0b8e: e9 31     -         sbc #$31
0b90: c9 05     -         cmp #$05
0b92: b0 f4     -         bcs !-
0b94: 18        -         clc
0b95: 69 03     -         adc #$03                                // Calculate game speed from level
0b97: 0a        -         asl
0b98: 0a        -         asl
0b99: 8d 62 13  -         sta GameSpeed
0b9c: a9 01     -         lda value
0b9e: 8d 5c 13  -         sta address
0ba1: a9 ff     -         lda value
0ba3: 8d 15 d0  -         sta address
0ba6: 20 2a 24  -         jsr AllOff
0ba9: a9 03     -         lda value
0bab: 85 03     -         sta address
0bad: a9 00     -         lda value
0baf: 85 04     -         sta address
0bb1: 20 c0 20  -         jsr EnDisTimer
0bb4: a2 22     -         ldx #TitleScreen - StartMessage
0bb6: a9 20     -         lda #$20
0bb8: 9d 20 07  -         sta MESSAGE_LOCATION, x
0bbb: ca        -         dex
0bbc: d0 fa     -         bne !-
0bbe: 4c cd 0b  -         jmp !++
0bc1: 60        -         rts
0bc2: 20 2a 24  - FlashButtons:jsr AllOff
0bc5: 20 ed 23  -         jsr GenerateRandom
0bc8: 85 03     -         sta r2H
0bca: 20 60 24  -         jsr TurnButtonOn
0bcd: 60        -         rts
0bce: ad 61 13  - UpdateScore:lda Score + $01
0bd1: 29 0f     -         and #$0f
0bd3: 18        -         clc
0bd4: 69 32     -         adc #SPRITES
0bd6: 8d ff 07  -         sta SCORE_ONES
0bd9: ad 61 13  -         lda Score + $01
0bdc: 29 f0     -         and #$f0
0bde: 4a        -         lsr
0bdf: 4a        -         lsr
0be0: 4a        -         lsr
0be1: 4a        -         lsr
0be2: 18        -         clc
0be3: 69 32     -         adc #SPRITES
0be5: 8d fe 07  -         sta SCORE_TENS
0be8: ad 60 13  -         lda Score
0beb: 29 0f     -         and #$0f
0bed: 18        -         clc
0bee: 69 32     -         adc #SPRITES
0bf0: 8d fd 07  -         sta SCORE_HUNDREDS
0bf3: ad 60 13  -         lda Score
0bf6: 29 f0     -         and #$f0
0bf8: 4a        -         lsr
0bf9: 4a        -         lsr
0bfa: 4a        -         lsr
0bfb: 4a        -         lsr
0bfc: 18        -         clc
0bfd: 69 32     -         adc #SPRITES
0bff: 8d fc 07  -         sta SCORE_THOUSANDS
0c02: 60        -         rts
0c03: a0 00     - WriteString:ldy #$00
0c05: b1 10     -         lda (r6), y
0c07: f0 0c     -         beq !++
0c09: 91 08     -         sta (r5), y
0c0b: c8        -         iny
0c0c: d0 04     -         bne !+
0c0e: e6 11     -         inc r6H
0c10: e6 09     -         inc r5H
0c12: 4c 05 0c  -         jmp !--
0c15: 60        -         rts
0c16: a0 00     - ClearLine:ldy #$00
0c18: a9 20     -         lda #$20
0c1a: 99 20 07  -         sta MESSAGE_LOCATION, y
0c1d: c8        -         iny
0c1e: c0 28     -         cpy #$28
0c20: d0 f8     -         bne !-
0c22: 60        -         rts
0c23: a2 00     - AnimateTitle:ldx #$00
0c25: ac 5b 13  -         ldy CurrentTitleColor
0c28: b9 17 10  -         lda TitleScreenColor, y
0c2b: 9d 36 d8  -         sta TITLE_LOCATION + $d400, x
0c2e: e8        -         inx
0c2f: c8        -         iny
0c30: e0 0c     -         cpx #$0c
0c32: d0 f4     -         bne !-
0c34: ee 5b 13  -         inc CurrentTitleColor
0c37: ad 5b 13  -         lda CurrentTitleColor
0c3a: c9 0c     -         cmp #$0c
0c3c: d0 05     -         bne !+
0c3e: a9 00     -         lda #$00
0c40: 8d 5b 13  -         sta CurrentTitleColor
0c43: 60        -         rts
0c44: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  -         .align $40
0c54: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0c64: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0c74: 00 00 00 00 00 00 00 00 00 00 00 00             
0c80: 00 00 00 00 00 00 00 00                          - Sprites:.byte $00,$00,$00,$00,$00,$00,$00,$00
0c88: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0c90: 29 00 00 aa 40 02 82 90                          -         .byte $29,$00,$00,$aa,$40,$02,$82,$90
0c98: 02 82 90 02 82 90 02 8a                          -         .byte $02,$82,$90,$02,$82,$90,$02,$8a
0ca0: 90 02 a2 90 02 82 90 02                          -         .byte $90,$02,$a2,$90,$02,$82,$90,$02
0ca8: 82 90 02 82 90 00 aa 40                          -         .byte $82,$90,$02,$82,$90,$00,$aa,$40
0cb0: 00 29 00 00 00 00 00 00                          -         .byte $00,$29,$00,$00,$00,$00,$00,$00
0cb8: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0cc0: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0cc8: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0cd0: 29 00 00 29 00 00 a9 00                          -         .byte $29,$00,$00,$29,$00,$00,$a9,$00
0cd8: 02 a9 00 00 29 00 00 29                          -         .byte $02,$a9,$00,$00,$29,$00,$00,$29
0ce0: 00 00 29 00 00 29 00 00                          -         .byte $00,$00,$29,$00,$00,$29,$00,$00
0ce8: 29 00 00 29 00 02 aa 90                          -         .byte $29,$00,$00,$29,$00,$02,$aa,$90
0cf0: 02 aa 90 00 00 00 00 00                          -         .byte $02,$aa,$90,$00,$00,$00,$00,$00
0cf8: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0d00: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0d08: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0d10: 29 00 00 aa 40 02 92 90                          -         .byte $29,$00,$00,$aa,$40,$02,$92,$90
0d18: 02 92 90 00 02 90 00 0a                          -         .byte $02,$92,$90,$00,$02,$90,$00,$0a
0d20: 40 00 29 00 00 a4 00 02                          -         .byte $40,$00,$29,$00,$00,$a4,$00,$02
0d28: 90 00 02 90 00 02 aa 90                          -         .byte $90,$00,$02,$90,$00,$02,$aa,$90
0d30: 02 aa 90 00 00 00 00 00                          -         .byte $02,$aa,$90,$00,$00,$00,$00,$00
0d38: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0d40: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0d48: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0d50: 29 00 00 aa 40 02 92 90                          -         .byte $29,$00,$00,$aa,$40,$02,$92,$90
0d58: 00 02 90 00 02 90 00 2a                          -         .byte $00,$02,$90,$00,$02,$90,$00,$2a
0d60: 40 00 2a 40 00 02 90 00                          -         .byte $40,$00,$2a,$40,$00,$02,$90,$00
0d68: 02 90 02 92 90 00 aa 40                          -         .byte $02,$90,$02,$92,$90,$00,$aa,$40
0d70: 00 29 00 00 00 00 00 00                          -         .byte $00,$29,$00,$00,$00,$00,$00,$00
0d78: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0d80: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0d88: 00 00 00 00 00 00 00 02                          -         .byte $00,$00,$00,$00,$00,$00,$00,$02
0d90: 92 90 02 92 90 02 92 90                          -         .byte $92,$90,$02,$92,$90,$02,$92,$90
0d98: 02 92 90 02 92 90 02 aa                          -         .byte $02,$92,$90,$02,$92,$90,$02,$aa
0da0: 90 02 aa 90 00 02 90 00                          -         .byte $90,$02,$aa,$90,$00,$02,$90,$00
0da8: 02 90 00 02 90 00 02 90                          -         .byte $02,$90,$00,$02,$90,$00,$02,$90
0db0: 00 02 90 00 00 00 00 00                          -         .byte $00,$02,$90,$00,$00,$00,$00,$00
0db8: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0dc0: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0dc8: 00 00 00 00 00 00 00 02                          -         .byte $00,$00,$00,$00,$00,$00,$00,$02
0dd0: aa 90 02 92 90 02 90 00                          -         .byte $aa,$90,$02,$92,$90,$02,$90,$00
0dd8: 02 90 00 02 90 00 02 aa                          -         .byte $02,$90,$00,$02,$90,$00,$02,$aa
0de0: 40 00 aa 90 00 02 90 00                          -         .byte $40,$00,$aa,$90,$00,$02,$90,$00
0de8: 02 90 02 92 90 02 9a 40                          -         .byte $02,$90,$02,$92,$90,$02,$9a,$40
0df0: 00 a9 00 00 00 00 00 00                          -         .byte $00,$a9,$00,$00,$00,$00,$00,$00
0df8: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0e00: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0e08: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0e10: 0a 90 00 2a 90 00 a4 00                          -         .byte $0a,$90,$00,$2a,$90,$00,$a4,$00
0e18: 02 90 00 02 99 00 02 aa                          -         .byte $02,$90,$00,$02,$99,$00,$02,$aa
0e20: 90 02 a6 90 02 92 90 02                          -         .byte $90,$02,$a6,$90,$02,$92,$90,$02
0e28: 92 90 02 92 90 02 92 90                          -         .byte $92,$90,$02,$92,$90,$02,$92,$90
0e30: 00 aa 40 00 00 00 00 00                          -         .byte $00,$aa,$40,$00,$00,$00,$00,$00
0e38: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0e40: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0e48: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0e50: aa a4 00 00 a4 00 00 a4                          -         .byte $aa,$a4,$00,$00,$a4,$00,$00,$a4
0e58: 00 02 90 00 02 90 00 0a                          -         .byte $00,$02,$90,$00,$02,$90,$00,$0a
0e60: 40 00 0a 40 00 29 00 00                          -         .byte $40,$00,$0a,$40,$00,$29,$00,$00
0e68: 29 00 00 29 00 00 29 00                          -         .byte $29,$00,$00,$29,$00,$00,$29,$00
0e70: 00 29 00 00 00 00 00 00                          -         .byte $00,$29,$00,$00,$00,$00,$00,$00
0e78: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0e80: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0e88: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0e90: 29 00 00 aa 40 02 92 90                          -         .byte $29,$00,$00,$aa,$40,$02,$92,$90
0e98: 02 92 90 02 92 90 00 aa                          -         .byte $02,$92,$90,$02,$92,$90,$00,$aa
0ea0: 40 02 92 90 02 92 90 02                          -         .byte $40,$02,$92,$90,$02,$92,$90,$02
0ea8: 92 90 02 92 90 00 aa 40                          -         .byte $92,$90,$02,$92,$90,$00,$aa,$40
0eb0: 00 29 00 00 00 00 00 00                          -         .byte $00,$29,$00,$00,$00,$00,$00,$00
0eb8: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0ec0: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0ec8: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0ed0: aa 40 02 92 90 02 92 90                          -         .byte $aa,$40,$02,$92,$90,$02,$92,$90
0ed8: 02 92 90 02 92 90 02 9a                          -         .byte $02,$92,$90,$02,$92,$90,$02,$9a
0ee0: 90 02 aa 90 00 26 90 00                          -         .byte $90,$02,$aa,$90,$00,$26,$90,$00
0ee8: 02 90 00 0a 40 02 a9 00                          -         .byte $02,$90,$00,$0a,$40,$02,$a9,$00
0ef0: 02 a4 00 00 00 00 00 00                          -         .byte $02,$a4,$00,$00,$00,$00,$00,$00
0ef8: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0f00: 13 05 0c 05 03 14 20 0c 05 16 05 0c 3a 20 31 20  - StartMessage:.text "select level: 1 (fast) - 5 (slow)"
0f10: 28 06 01 13 14 29 20 2d 20 35 20 28 13 0c 0f 17 
0f20: 29                                              
0f21: 00        -         .byte $00
0f22: 06 0f 0c 0c 0f 17 20 0d 05 20 16 31              - TitleScreen:.text "follow me v1"
0f2e: 00        -         .byte $00
0f2f: 17 01 14 03 08 20 01 0e 04 20 0c 09 13 14 05 0e  - MyTurn: .text "watch and listen carefully!"
0f3f: 20 03 01 12 05 06 15 0c 0c 19 21                
0f4a: 00        -         .byte $00
0f4b: 01 01 01 01 01 01 01 01 01 01 01 01              - MyTurnColor:.byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
0f57: 01 01 01 01 01 01 01 01 01 01 01 01              -         .byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
0f63: 01 01 01  -         .byte vic.WHITE, vic.WHITE, vic.WHITE
0f66: 00        -         .byte $00
0f67: 19 0f 15 12 20 14 15 12 0e 21 20 13 08 0f 17 20  - YourTurn:.text "your turn! show me what ya got, kid!"
0f77: 0d 05 20 17 08 01 14 20 19 01 20 07 0f 14 2c 20 
0f87: 0b 09 04 21                                     
0f8b: 00        -         .byte $00
0f8c: 01 01 01 01 01 01 01 01 01 01 01 01              - YourTurnColor:.byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
0f98: 01 01 01 01 01 01 01 01 01 01 01 01              -         .byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
0fa4: 01 01 01 01 01 01 01 01 01 01 01 01              -         .byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
0fb0: 00        -         .byte $00
0fb1: 07 01 0d 05 20 0f 16 05 12 2e 20 10 0c 01 19 20  - GameOver:.text "game over. play again?"
0fc1: 01 07 01 09 0e 3f                               
0fc7: 00        -         .byte $00
0fc8: 01 01 01 01 01 01 01 01 01 01 01 01              - GameOverColor:.byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
0fd4: 01 01 01 01 01 01 01 01 01 01                    -         .byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
0fde: 00        -         .byte $00
0fdf: 14 08 01 0e 0b 13 20 06 0f 12 20 10 0c 01 19 09  - SeeYa:  .text "thanks for playing! see ya!"
0fef: 0e 07 21 20 13 05 05 20 19 01 21                
0ffa: 00        -         .byte $00
0ffb: 01 01 01 01 01 01 01 01 01 01 01 01              - SeeYaColor:.byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
1007: 01 01 01 01 01 01 01 01 01 01 01 01              -         .byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
1013: 01 01 01  -         .byte vic.WHITE, vic.WHITE, vic.WHITE
1016: 00        -         .byte $00
1017: 0a 07 0d 0e 0a 07 0d 0e 0a 07 0d 0e 0a 07 0d 0e  - TitleScreenColor:.byte $0a, $07, $0d, $0e, $0a, $07, $0d, $0e, $0a, $07, $0d, $0e, $0a, $07, $0d, $0e, $0a, $07, $0d, $0e, $0a, $07, $0d, $0e
1027: 0a 07 0d 0e 0a 07 0d 0e                         
102f: 00        -         .byte $00
1030: 00 0b 0c 0f 01 0f 0c 0b                          - StartMessageColors:.byte $00, $0b, $0c, $0f, $01, $0f, $0c, $0b
1038: 55 43 43 43 43 43 43 43 43 49 55 43 43 43 43 43  - Buttons:.byte $55, $43, $43, $43, $43, $43, $43, $43, $43, $49, $55, $43, $43, $43, $43, $43, $43, $43, $43, $49, $55, $43, $43, $43, $43, $43, $43, $43, $43, $49, $55, $43, $43, $43, $43, $43, $43, $43, $43, $49
1048: 43 43 43 49 55 43 43 43 43 43 43 43 43 49 55 43 
1058: 43 43 43 43 43 43 43 49                         
1060: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
1070: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
1080: 66 66 66 66 66 66 66 5d                         
1088: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
1098: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
10a8: 66 66 66 66 66 66 66 5d                         
10b0: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
10c0: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
10d0: 66 66 66 66 66 66 66 5d                         
10d8: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
10e8: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
10f8: 66 66 66 66 66 66 66 5d                         
1100: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
1110: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
1120: 66 66 66 66 66 66 66 5d                         
1128: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
1138: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
1148: 66 66 66 66 66 66 66 5d                         
1150: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
1160: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
1170: 66 66 66 66 66 66 66 5d                         
1178: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
1188: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
1198: 66 66 66 66 66 66 66 5d                         
11a0: 4a 43 43 43 43 43 43 43 43 4b 4a 43 43 43 43 43  -         .byte $4a, $43, $43, $43, $43, $43, $43, $43, $43, $4b, $4a, $43, $43, $43, $43, $43, $43, $43, $43, $4b, $4a, $43, $43, $43, $43, $43, $43, $43, $43, $4b, $4a, $43, $43, $43, $43, $43, $43, $43, $43, $4b
11b0: 43 43 43 4b 4a 43 43 43 43 43 43 43 43 4b 4a 43 
11c0: 43 43 43 43 43 43 43 4b                         
11c8: 00        -         .byte $00
11c9: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01  - ButtonColors:.byte $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01
11d9: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
11e9: 01 01 01 01 01 01 01 01                         
11f1: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
1201: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
1211: 06 06 06 06 06 06 06 01                         
1219: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
1229: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
1239: 06 06 06 06 06 06 06 01                         
1241: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
1251: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
1261: 06 06 06 06 06 06 06 01                         
1269: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
1279: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
1289: 06 06 06 06 06 06 06 01                         
1291: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
12a1: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
12b1: 06 06 06 06 06 06 06 01                         
12b9: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
12c9: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
12d9: 06 06 06 06 06 06 06 01                         
12e1: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
12f1: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
1301: 06 06 06 06 06 06 06 01                         
1309: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
1319: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
1329: 06 06 06 06 06 06 06 01                         
1331: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01  -         .byte $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01
1341: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
1351: 01 01 01 01 01 01 01 01                         
1359: 00        -         .byte $00
135a: 00        - CurrentStartMessageColor:.byte $00
135b: 00        - CurrentTitleColor:.byte $00
135c: 00        - GameMode:.byte $00
135d: 00 00     - Clock:  .word $0000
135f: 00        - LastKeyboardKey:.byte $00
1360: 00 00     - Score:  .word $0000
1362: 00        - GameSpeed:.byte $00
1363: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  - GamePattern:.fill $64, $00
1383: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
13a3: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
13c3: 00 00 00 00                                                                                     

[Default]
2000: 00 00     - ReturnAddress:.word $0000
2002: a9 00     - ClearTimers:lda value
2004: 85 fb     -         sta address
2006: a9 3c     -         lda value
2008: 85 fd     -         sta address
200a: a9 03     -         lda value
200c: 85 fe     -         sta address
200e: a9 40     -         lda value
2010: 85 02     -         sta address
2012: a9 00     -         lda value
2014: 85 03     -         sta address
2016: 20 dc 20  -         jsr FillMemory
2019: 60        -         rts
201a: a5 03     - CreateTimer:lda r2H
201c: 0a        -         asl
201d: 0a        -         asl
201e: 0a        -         asl
201f: aa        -         tax
2020: a5 04     -         lda value
2022: 9d 3c 03  -         sta address
2025: a5 02     -         lda value
2027: 9d 3d 03  -         sta address
202a: a5 fb     -         lda value
202c: 9d 3e 03  -         sta address
202f: a5 fc     -         lda value
2031: 9d 3f 03  -         sta address
2034: a5 fb     -         lda value
2036: 9d 40 03  -         sta address
2039: a5 fc     -         lda value
203b: 9d 41 03  -         sta address
203e: a5 fd     -         lda value
2040: 9d 42 03  -         sta address
2043: a5 fe     -         lda value
2045: 9d 43 03  -         sta address
2048: 60        -         rts
2049: a0 00     - UpdateTimers:ldy #$00
204b: 98        -         tya
204c: 0a        -         asl
204d: 0a        -         asl
204e: 0a        -         asl
204f: 85 fb     -         sta r0L
2051: aa        -         tax
2052: bd 3c 03  -         lda address
2055: c9 80     -         cmp value
2057: d0 61     -         bne location
2059: e8        -         inx
205a: bd 3c 03  -         lda value
205d: 85 05     -         sta address
205f: e8        -         inx
2060: 86 fe     -         stx r1H
2062: bd 3c 03  -         lda c64lib_timers, x // current value
2065: d0 03     -         bne !return+
2067: de 3d 03  -         dec c64lib_timers + $01, x
206a: de 3c 03  -         dec c64lib_timers, x
206d: bd 3c 03  -         lda c64lib_timers, x
2070: d0 48     -         bne !continue+
2072: bd 3d 03  -         lda c64lib_timers + $01, x
2075: d0 43     -         bne !continue+
2077: e8        -         inx
2078: e8        -         inx
2079: bd 3c 03  -         lda value
207c: 85 02     -         sta address
207e: e8        -         inx
207f: bd 3c 03  -         lda value
2082: 85 03     -         sta address
2084: a5 fe     -         lda r1H
2086: aa        -         tax
2087: a5 02     -         lda value
2089: 9d 3c 03  -         sta address
208c: e8        -         inx
208d: a5 03     -         lda value
208f: 9d 3c 03  -         sta address
2092: e8        -         inx
2093: e8        -         inx
2094: e8        -         inx
2095: 98        -         tya
2096: 48        -         pha
2097: bd 3c 03  -         lda value
209a: 85 02     -         sta address
209c: e8        -         inx
209d: bd 3c 03  -         lda value
20a0: 85 03     -         sta address
20a2: 20 a8 20  -         jsr !dispatch+
20a5: 4c ab 20  -         jmp !done_dispatch+
20a8: 6c 02 00  -         jmp (r2)
20ab: 68        -         pla
20ac: a8        -         tay
20ad: a5 05     -         lda address
20af: c9 01     -         cmp value
20b1: f0 07     -         beq location
20b3: a6 fb     -         ldx r0L
20b5: a9 00     -         lda value
20b7: 9d 3c 03  -         sta address
20ba: c8        -         iny
20bb: c0 07     -         cpy #$07
20bd: d0 8c     -         bne !loop-
20bf: 60        -         rts
20c0: a5 03     - EnDisTimer:lda r2H
20c2: 0a        -         asl
20c3: 0a        -         asl
20c4: 0a        -         asl
20c5: aa        -         tax
20c6: a5 04     -         lda value
20c8: 9d 3c 03  -         sta address
20cb: 60        -         rts
20cc: a5 12     - PauseJiffies:lda r7L
20ce: 18        -         clc
20cf: 6d 5d 13  -         adc Clock
20d2: 85 12     -         sta r7L
20d4: ad 5d 13  -         lda Clock
20d7: c5 12     -         cmp r7L
20d9: d0 f9     -         bne !-
20db: 60        -         rts
20dc: a0 00     - FillMemory:ldy #$00
20de: a5 fb     -         lda r0L
20e0: 91 fd     -         sta (r1), y
20e2: a5 02     -         lda word
20e4: d0 02     -         bne !+
20e6: c6 03     -         dec word + $01
20e8: c6 02     -         dec word
20ea: a5 03     -         lda byte1
20ec: c9 00     -         cmp #byte2
20ee: d0 04     -         bne !+
20f0: a5 02     -         lda byte1
20f2: c9 00     -         cmp #byte2
20f4: f0 08     -         beq !end+
20f6: c8        -         iny
20f7: d0 e5     -         bne !l1-
20f9: e6 fe     -         inc r1H
20fb: 4c de 20  -         jmp !l1-
20fe: 60        -         rts
20ff: a5 02     - CopyMemory:lda r2L
2101: 05 03     -         ora r2H
2103: f0 4d     -         beq !l7+
2105: a5 fc     -         lda address
2107: 48        -         pha
2108: a5 fb     -         lda address
210a: 48        -         pha
210b: a5 fe     -         lda address
210d: 48        -         pha
210e: a5 03     -         lda address
2110: 48        -         pha
2111: a5 04     -         lda address
2113: 48        -         pha
2114: a5 fc     -         lda byte1
2116: c5 fe     -         cmp byte2
2118: d0 04     -         bne !+
211a: a5 fb     -         lda byte1
211c: c5 fd     -         cmp byte2
211e: b0 02     -         bcs !l3+
2120: 90 31     -         bcc !l8+
2122: a0 00     -         ldy #0
2124: a5 03     -         lda r2H
2126: f0 0f     -         beq !l5+
2128: b1 fb     -         lda (r0), y
212a: 91 fd     -         sta (r1), y
212c: c8        -         iny
212d: d0 f9     -         bne !l4-
212f: e6 fc     -         inc r0H
2131: e6 fe     -         inc r1H
2133: c6 03     -         dec r2H
2135: d0 f1     -         bne !l4-
2137: c4 02     -         cpy r2L
2139: f0 08     -         beq !l6+
213b: b1 fb     -         lda (r0), y
213d: 91 fd     -         sta (r1), y
213f: c8        -         iny
2140: b8        -         clv
2141: 50 f4     -         bvc address
2143: 68        -         pla
2144: 85 04     -         sta address
2146: 68        -         pla
2147: 85 03     -         sta address
2149: 68        -         pla
214a: 85 fe     -         sta address
214c: 68        -         pla
214d: 85 fb     -         sta address
214f: 68        -         pla
2150: 85 fc     -         sta address
2152: 60        -         rts
2153: 18        -         clc
2154: a5 03     -         lda r2H
2156: 65 fc     -         adc r0H
2158: 85 fc     -         sta r0H
215a: 18        -         clc
215b: a5 03     -         lda r2H
215d: 65 fe     -         adc r1H
215f: 85 fe     -         sta r1H
2161: a4 02     -         ldy r2L
2163: f0 08     -         beq !lA+
2165: 88        -         dey
2166: b1 fb     -         lda (r0), y
2168: 91 fd     -         sta (r1), y
216a: 98        -         tya
216b: d0 f8     -         bne !l9-
216d: c6 fc     -         dec r0H
216f: c6 fe     -         dec r1H
2171: a5 03     -         lda r2H
2173: f0 ce     -         beq !l6-
2175: 88        -         dey
2176: b1 fb     -         lda (r0), y
2178: 91 fd     -         sta (r1), y
217a: 98        -         tya
217b: d0 f8     -         bne !lB-
217d: c6 03     -         dec r2H
217f: b8        -         clv
2180: 50 eb     -         bvc address
2182: a2 18     - InitSound:ldx #$18
2184: a9 00     -         lda #$00
2186: 9d 00 d4  -         sta sid.FRELO1, x
2189: ca        -         dex
218a: 10 fa     -         bpl !-
218c: a9 0f     -         lda value
218e: 8d 18 d4  -         sta address
2191: a9 22     -         lda value
2193: 8d 05 d4  -         sta address
2196: a9 80     -         lda value
2198: 8d 06 d4  -         sta address
219b: 60        -         rts
219c: 48        - PlaySound:pha
219d: aa        -         tax
219e: bd df 21  -         lda Waveforms, x
21a1: 8d e4 21  -         sta CurrentWaveform
21a4: 68        -         pla
21a5: 0a        -         asl
21a6: aa        -         tax
21a7: bd d5 21  -         lda Notes, x
21aa: 8d 01 d4  -         sta sid.FREHI1
21ad: bd d6 21  -         lda Notes + 1, x
21b0: 8d 00 d4  -         sta sid.FRELO1
21b3: ad e4 21  -         lda CurrentWaveform
21b6: 8d 04 d4  -         sta sid.VCREG1
21b9: a9 01     -         lda #sid.SOUND_PLAYING
21bb: 8d e5 21  -         sta SoundPlaying
21be: 60        -         rts
21bf: ad e5 21  - StopSound:lda SoundPlaying
21c2: c9 01     -         cmp #sid.SOUND_PLAYING
21c4: d0 0e     -         bne !+
21c6: ce e4 21  -         dec CurrentWaveform
21c9: ad e4 21  -         lda CurrentWaveform
21cc: 8d 04 d4  -         sta sid.VCREG1
21cf: a9 00     -         lda #$00
21d1: 8d e5 21  -         sta SoundPlaying
21d4: 60        -         rts
21d5: 08 61     - Notes:  .byte 8,97      // Fail
21d7: 0c 8f     -         .byte 12,143    // G blue
21d9: 10 c3     -         .byte 16,195    // C yellow
21db: 15 1f     -         .byte 21,31     // E red
21dd: 19 1e     -         .byte 25,30     // G green
21df: 81 11 11 11 11                                   - Waveforms:.byte sid.WAVE_NOISE, sid.WAVE_TRIANGLE, sid.WAVE_TRIANGLE, sid.WAVE_TRIANGLE, sid.WAVE_TRIANGLE
21e4: 00        - CurrentWaveform:.byte $00
21e5: 00        - SoundPlaying:.byte $00

[Keyboard Scan Routine]
21e6: 4c 4f 22  - Keyboard:jmp Main
21e9: 0a        - KeyInRow:asl
21ea: b0 03     -         bcs *+5
21ec: 20 21 22  -         jsr KeyFound
21ef: e8        -         inx
21f0: 0a        -         asl
21f1: b0 03     -         bcs *+5
21f3: 20 21 22  -         jsr KeyFound
21f6: e8        -         inx
21f7: 0a        -         asl
21f8: b0 03     -         bcs *+5
21fa: 20 21 22  -         jsr KeyFound
21fd: e8        -         inx
21fe: 0a        -         asl
21ff: b0 03     -         bcs *+5
2201: 20 21 22  -         jsr KeyFound
2204: e8        -         inx
2205: 0a        -         asl
2206: b0 03     -         bcs *+5
2208: 20 21 22  -         jsr KeyFound
220b: e8        -         inx
220c: 0a        -         asl
220d: b0 03     -         bcs *+5
220f: 20 21 22  -         jsr KeyFound
2212: e8        -         inx
2213: 0a        -         asl
2214: b0 03     -         bcs *+5
2216: 20 21 22  -         jsr KeyFound
2219: e8        -         inx
221a: 0a        -         asl
221b: b0 03     -         bcs *+5
221d: 20 21 22  -         jsr KeyFound
2220: 60        -         rts
2221: 86 5e     - KeyFound:stx TempZP
2223: c6 5b     -         dec KeyQuantity
2225: 30 0a     -         bmi OverFlow
2227: bc a4 23  -         ldy KeyTable,x
222a: a6 5b     -         ldx KeyQuantity
222c: 94 58     -         sty BufferNew,x
222e: a6 5e     -         ldx TempZP
2230: 60        -         rts
2231: 68        - OverFlow:pla  // Dirty hack to handle 2 layers of JSR
2232: 68        -         pla
2233: 68        -         pla
2234: 68        -         pla
2235: a9 03     -         lda #$03
2237: 38        -         sec
2238: 60        -         rts
2239: a9 00     - NoActivityDetected:lda #$00
223b: 8d ec 23  -         sta SimultaneousAlphanumericKeysFlag  // Clear the too many keys flag once a "no activity" state is detected.
223e: 8e e4 23  -         stx BufferOld
2241: 8e e5 23  -         stx BufferOld+1
2244: 8e e6 23  -         stx BufferOld+2
2247: 38        -         sec
2248: a9 01     -         lda #$01
224a: 60        -         rts
224b: 38        - ControlPort:sec
224c: a9 02     -         lda #$02
224e: 60        -         rts
224f: a2 ff     - Main:   ldx #$ff
2251: 8e 02 dc  -         stx $dc02       // Port A - Output
2254: a0 00     -         ldy #$00
2256: 8c 03 dc  -         sty $dc03       // Port B - Input
2259: 8c 00 dc  -         sty $dc00       // Connect all Keyboard Rows
225c: ec 01 dc  -         cpx $dc01
225f: f0 d8     -         beq NoActivityDetected
2261: ad ec 23  -         lda SimultaneousAlphanumericKeysFlag
2264: f0 04     -         beq !+
2266: a9 05     -         lda #$05
2268: 38        -         sec
2269: 60        -         rts
226a: 8e 00 dc  -         stx $dc00       // Disconnect all Keyboard Rows
226d: ec 01 dc  -         cpx $dc01       // Only Control Port activity will be detected
2270: d0 d9     -         bne ControlPort
2272: a9 fe     -         lda #%11111110
2274: 8d 00 dc  -         sta $dc00
2277: ac 01 dc  -         ldy $dc01
227a: 84 57     -         sty ScanResult+7
227c: 38        -         sec
227d: 2a        -         rol
227e: 8d 00 dc  -         sta $dc00
2281: ac 01 dc  -         ldy $dc01
2284: 84 56     -         sty ScanResult+i
2286: 2a        -         rol
2287: 8d 00 dc  -         sta $dc00
228a: ac 01 dc  -         ldy $dc01
228d: 84 55     -         sty ScanResult+i
228f: 2a        -         rol
2290: 8d 00 dc  -         sta $dc00
2293: ac 01 dc  -         ldy $dc01
2296: 84 54     -         sty ScanResult+i
2298: 2a        -         rol
2299: 8d 00 dc  -         sta $dc00
229c: ac 01 dc  -         ldy $dc01
229f: 84 53     -         sty ScanResult+i
22a1: 2a        -         rol
22a2: 8d 00 dc  -         sta $dc00
22a5: ac 01 dc  -         ldy $dc01
22a8: 84 52     -         sty ScanResult+i
22aa: 2a        -         rol
22ab: 8d 00 dc  -         sta $dc00
22ae: ac 01 dc  -         ldy $dc01
22b1: 84 51     -         sty ScanResult+i
22b3: 2a        -         rol
22b4: 8d 00 dc  -         sta $dc00
22b7: ac 01 dc  -         ldy $dc01
22ba: 84 50     -         sty ScanResult+i
22bc: 8e 00 dc  -         stx $dc00       // Disconnect all Keyboard Rows
22bf: ec 01 dc  -         cpx $dc01       // Only Control Port activity will be detected
22c2: d0 87     -         bne ControlPort
22c4: 86 58     -         stx BufferNew
22c6: 86 59     -         stx BufferNew+1
22c8: 86 5a     -         stx BufferNew+2
22ca: e8        -         inx
22cb: 86 5d     -         stx NonAlphaFlagY
22cd: a9 03     -         lda #MaxKeyRollover
22cf: 85 5b     -         sta KeyQuantity
22d1: a9 fe     -         lda #$fe
22d3: 85 5f     -         sta SimultaneousKeys
22d5: a5 56     -         lda ScanResult+6
22d7: 49 ff     -         eor #$ff
22d9: 29 80     -         and #%10000000     // Left Shift
22db: 4a        -         lsr
22dc: 85 5d     -         sta NonAlphaFlagY
22de: a5 50     -         lda ScanResult+0
22e0: 49 ff     -         eor #$ff
22e2: 29 a4     -         and #%10100100     // RUN STOP - C= - CTRL
22e4: 05 5d     -         ora NonAlphaFlagY
22e6: 85 5d     -         sta NonAlphaFlagY
22e8: a5 51     -         lda ScanResult+1
22ea: 49 ff     -         eor #$ff
22ec: 29 18     -         and #%00011000     // Right SHIFT - CLR HOME
22ee: 05 5d     -         ora NonAlphaFlagY
22f0: 85 5d     -         sta NonAlphaFlagY
22f2: a5 57     -         lda ScanResult+7  // The rest
22f4: 49 ff     -         eor #$ff
22f6: 85 5c     -         sta NonAlphaFlagX
22f8: a5 57     -         lda ScanResult+7
22fa: c9 ff     -         cmp #$ff
22fc: f0 03     -         beq *+5
22fe: 20 e9 21  -         jsr KeyInRow
2301: a2 08     -         ldx #[7-i]*8
2303: a5 56     -         lda ScanResult+i
2305: f0 03     -         beq *+5
2307: 20 e9 21  -         jsr KeyInRow
230a: a2 10     -         ldx #[7-i]*8
230c: a5 55     -         lda ScanResult+i
230e: f0 03     -         beq *+5
2310: 20 e9 21  -         jsr KeyInRow
2313: a2 18     -         ldx #[7-i]*8
2315: a5 54     -         lda ScanResult+i
2317: f0 03     -         beq *+5
2319: 20 e9 21  -         jsr KeyInRow
231c: a2 20     -         ldx #[7-i]*8
231e: a5 53     -         lda ScanResult+i
2320: f0 03     -         beq *+5
2322: 20 e9 21  -         jsr KeyInRow
2325: a2 28     -         ldx #[7-i]*8
2327: a5 52     -         lda ScanResult+i
2329: f0 03     -         beq *+5
232b: 20 e9 21  -         jsr KeyInRow
232e: a2 30     -         ldx #[7-i]*8
2330: a5 51     -         lda ScanResult+i
2332: f0 03     -         beq *+5
2334: 20 e9 21  -         jsr KeyInRow
2337: a2 38     -         ldx #[7-i]*8
2339: a5 50     -         lda ScanResult+i
233b: f0 03     -         beq *+5
233d: 20 e9 21  -         jsr KeyInRow
2340: a2 02     -         ldx #MaxKeyRollover-1
2342: b5 58     -         lda BufferNew,x
2344: c9 ff     -         cmp #$ff
2346: f0 1c     -         beq Exist        // Handle 'null' values
2348: cd e4 23  -         cmp BufferOld
234b: f0 17     -         beq Exist
234d: cd e5 23  -         cmp BufferOld+1
2350: f0 12     -         beq Exist
2352: cd e6 23  -         cmp BufferOld+2
2355: f0 0d     -         beq Exist
2357: ee eb 23  -         inc BufferQuantity
235a: ac eb 23  -         ldy BufferQuantity
235d: 99 e7 23  -         sta Buffer,y
2360: e6 5f     -         inc SimultaneousKeys
2362: f0 34     -         beq TooManyNewKeys
2364: ca        - Exist:  dex
2365: 10 db     -         bpl !-
2367: ac eb 23  -         ldy BufferQuantity
236a: 30 15     -         bmi BufferEmpty
236c: ce eb 23  -         dec BufferQuantity
236f: ad e7 23  -         lda Buffer
2372: ae e8 23  -         ldx Buffer+1
2375: 8e e7 23  -         stx Buffer
2378: ae e9 23  -         ldx Buffer+2
237b: 8e e8 23  -         stx Buffer+1
237e: 4c 83 23  -         jmp Return
2381: a9 ff     - BufferEmpty:lda #$ff
2383: 18        - Return: clc
2384: a6 58     -         ldx BufferNew
2386: 8e e4 23  -         stx BufferOld
2389: a6 59     -         ldx BufferNew+1
238b: 8e e5 23  -         stx BufferOld+1
238e: a6 5a     -         ldx BufferNew+2
2390: 8e e6 23  -         stx BufferOld+2
2393: a6 5c     -         ldx NonAlphaFlagX
2395: a4 5d     -         ldy NonAlphaFlagY
2397: 60        -         rts
2398: 38        - TooManyNewKeys:sec
2399: a9 ff     -         lda #$ff
239b: 8d eb 23  -         sta BufferQuantity
239e: 8d ec 23  -         sta SimultaneousAlphanumericKeysFlag
23a1: a9 04     -         lda #$04
23a3: 60        -         rts
23a4: ff ff ff ff ff ff ff ff                          - KeyTable:.byte $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff  // CRSR DOWN, F5, F3, F1, F7, CRSR RIGHT, RETURN, INST DEL
23ac: ff 05 13 1a 34 01 17 33                          -         .byte $ff, $05, $13, $1a, $34, $01, $17, $33  // LEFT SHIFT, "E", "S", "Z", "4", "A", "W", "3"
23b4: 18 14 06 03 36 04 12 35                          -         .byte $18, $14, $06, $03, $36, $04, $12, $35  // "X", "T", "F", "C", "6", "D", "R", "5"
23bc: 16 15 08 02 38 07 19 37                          -         .byte $16, $15, $08, $02, $38, $07, $19, $37  // "V", "U", "H", "B", "8", "G", "Y", "7"
23c4: 0e 0f 0b 0d 30 0a 09 39                          -         .byte $0e, $0f, $0b, $0d, $30, $0a, $09, $39  // "N", "O" (Oscar), "K", "M", "0" (Zero), "J", "I", "9"
23cc: 2c 00 3a 2e 2d 0c 10 2b                          -         .byte $2c, $00, $3a, $2e, $2d, $0c, $10, $2b  // ",", "@", ":", ".", "-", "L", "P", "+"
23d4: 2f 1e 3d ff ff 3b 2a 1c                          -         .byte $2f, $1e, $3d, $ff, $ff, $3b, $2a, $1c  // "/", "^", "=", RIGHT SHIFT, HOME, ";", "*", "£"
23dc: ff 11 ff 20 32 ff 1f 31                          -         .byte $ff, $11, $ff, $20, $32, $ff, $1f, $31  // RUN STOP, "Q", "C=" (CMD), " " (SPC), "2", "CTRL", "<-", "1"
23e4: ff ff ff  - BufferOld:.byte $ff, $ff, $ff
23e7: ff ff ff ff                                      - Buffer: .byte $ff, $ff, $ff, $ff
23eb: ff        - BufferQuantity:.byte $ff
23ec: 00        - SimultaneousAlphanumericKeysFlag:.byte $00
23ed: ad 1b d4  - GenerateRandom:lda $d41b
23f0: 29 03     -         and #$03
23f2: 18        -         clc
23f3: 69 01     -         adc #$01
23f5: 60        -         rts
23f6: a9 ff     - InitRandom:lda value
23f8: 8d 0e d4  -         sta address
23fb: a9 ff     -         lda value
23fd: 8d 0f d4  -         sta address
2400: a9 80     -         lda value
2402: 8d 12 d4  -         sta address
2405: 60        -         rts
2406: ad e5 24  - ButtonWithSound:lda ButtonLit
2409: c9 00     -         cmp #$00
240b: d0 0b     -         bne !+
240d: a5 03     -         lda r2H
240f: 8d e5 24  -         sta ButtonLit
2412: 20 9c 21  -         jsr PlaySound
2415: 20 60 24  -         jsr TurnButtonOn
2418: 60        -         rts
2419: 20 cc 20  - ButtonHold:jsr PauseJiffies
241c: 20 bf 21  -         jsr StopSound
241f: 20 2a 24  -         jsr AllOff
2422: a5 13     -         lda value
2424: 85 12     -         sta address
2426: 20 cc 20  -         jsr PauseJiffies
2429: 60        -         rts
242a: a9 18     - AllOff: lda value
242c: 85 08     -         sta address
242e: a9 05     -         lda value
2430: 85 09     -         sta address
2432: a9 38     -         lda value
2434: 85 10     -         sta address
2436: a9 10     -         lda value
2438: 85 11     -         sta address
243a: 20 03 0c  -         jsr WriteString
243d: a9 18     -         lda value
243f: 85 08     -         sta address
2441: a9 d9     -         lda value
2443: 85 09     -         sta address
2445: a9 c9     -         lda value
2447: 85 10     -         sta address
2449: a9 11     -         lda value
244b: 85 11     -         sta address
244d: 20 03 0c  -         jsr WriteString
2450: a2 04     -         ldx #$04
2452: a9 0b     -         lda #vic.DK_GRAY
2454: 9d 26 d0  -         sta vic.SPMC1, x
2457: ca        -         dex
2458: d0 fa     -         bne !-
245a: a9 00     -         lda value
245c: 8d e5 24  -         sta address
245f: 60        -         rts
2460: a6 03     - TurnButtonOn:ldx r2H
2462: a9 01     -         lda #vic.WHITE
2464: 9d 26 d0  -         sta vic.SPMC1, x
2467: a5 03     -         lda r2H
2469: c9 01     -         cmp #$01
246b: d0 0f     -         bne !+
246d: a9 41     -         lda value
246f: 85 18     -         sta address
2471: a9 05     -         lda value
2473: 85 19     -         sta address
2475: a9 0a     -         lda value
2477: 85 14     -         sta address
2479: 4c b2 24  -         jmp !++++
247c: c9 02     -         cmp #$02
247e: d0 0f     -         bne !+
2480: a9 4b     -         lda value
2482: 85 18     -         sta address
2484: a9 05     -         lda value
2486: 85 19     -         sta address
2488: a9 07     -         lda value
248a: 85 14     -         sta address
248c: 4c b2 24  -         jmp !+++
248f: c9 03     -         cmp #$03
2491: d0 0f     -         bne !+
2493: a9 55     -         lda value
2495: 85 18     -         sta address
2497: a9 05     -         lda value
2499: 85 19     -         sta address
249b: a9 0d     -         lda value
249d: 85 14     -         sta address
249f: 4c b2 24  -         jmp !++
24a2: c9 04     -         cmp #$04
24a4: d0 0c     -         bne !+
24a6: a9 5f     -         lda value
24a8: 85 18     -         sta address
24aa: a9 05     -         lda value
24ac: 85 19     -         sta address
24ae: a9 0e     -         lda value
24b0: 85 14     -         sta address
24b2: 20 b6 24  -         jsr LightButton
24b5: 60        -         rts
24b6: a2 00     - LightButton:ldx #$00
24b8: a0 00     -         ldy #$00
24ba: a9 a0     -         lda #$a0
24bc: 91 18     -         sta (r10), y
24be: a5 18     -         lda r10L
24c0: 85 16     -         sta r9L
24c2: a5 19     -         lda r10H
24c4: 18        -         clc
24c5: 69 d4     -         adc #$d4
24c7: 85 17     -         sta r9H
24c9: a5 14     -         lda r8L
24cb: 91 16     -         sta (r9), y
24cd: c8        -         iny
24ce: c0 08     -         cpy #$08
24d0: d0 e8     -         bne !-
24d2: a0 00     -         ldy #$00
24d4: 18        -         clc
24d5: a5 18     -         lda r10L
24d7: 69 28     -         adc #$28
24d9: 85 18     -         sta r10L
24db: 90 02     -         bcc !+
24dd: e6 19     -         inc r10H
24df: e8        -         inx
24e0: e0 08     -         cpx #$08
24e2: d0 d6     -         bne !--
24e4: 60        -         rts
24e5: 00        - ButtonLit:.byte $00
