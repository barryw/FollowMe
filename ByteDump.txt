******************************* Segment: Default *******************************
[Basic]
0801: 0b 08     -         
0803: 0a 00     -         
0805: 9e        -         
0806: 32 30 36 32                                      -         
080a: 00        -         
080b: 00 00     - upstartEnd:

[Basic End]
080e: 20 80 21  - Main:   jsr InitSound
0811: 20 f4 23  -         jsr InitRandom
0814: 20 00 20  -         jsr ClearTimers
0817: 20 c3 08  -         jsr SetupTimers
081a: 20 2e 09  -         jsr SetupScreen
081d: 20 5e 08  -         jsr SetupSprites
0820: 20 2b 08  -         jsr SetupInterrupt
0823: a9 00     -         lda value
0825: 8d 6b 10  -         sta address
0828: 4c 99 09  -         jmp GameLoop
082b: 78        - SetupInterrupt:sei
082c: a9 7f     -         lda #LOWER7
082e: 8d 0d dc  -         sta vic.CIAICR
0831: 8d 0d dd  -         sta vic.CI2ICR
0834: ad 0d dc  -         lda vic.CIAICR
0837: ad 0d dd  -         lda vic.CI2ICR
083a: a9 01     -         lda #$01
083c: 8d 19 d0  -         sta vic.VICIRQ
083f: 8d 1a d0  -         sta vic.IRQMSK
0842: a9 00     -         lda value
0844: 8d 12 d0  -         sta address
0847: a9 1b     -         lda value
0849: 8d 11 d0  -         sta address
084c: a9 35     -         lda value
084e: 85 01     -         sta address
0850: 48        -         pha
0851: a9 02     -         lda #<word
0853: 8d fe ff  -         sta address
0856: a9 09     -         lda #>word
0858: 8d ff ff  -         sta address + $01
085b: 68        -         pla
085c: 58        -         cli
085d: 60        -         rts
085e: a9 00     - SetupSprites:lda value
0860: 8d 26 d0  -         sta address
0863: a9 0b     -         lda value
0865: 8d 27 d0  -         sta address
0868: a9 0b     -         lda value
086a: 8d 28 d0  -         sta address
086d: a9 0b     -         lda value
086f: 8d 29 d0  -         sta address
0872: a9 0b     -         lda value
0874: 8d 2a d0  -         sta address
0877: a9 2e     -         lda value
0879: 8d f8 07  -         sta address
087c: a9 2f     -         lda value
087e: 8d f9 07  -         sta address
0881: a9 30     -         lda value
0883: 8d fa 07  -         sta address
0886: a9 31     -         lda value
0888: 8d fb 07  -         sta address
088b: a9 00     -         lda value
088d: 8d 15 d0  -         sta address
0890: a9 0f     -         lda value
0892: 8d 1c d0  -         sta address
0895: a9 34     -         lda value
0897: 8d 00 d0  -         sta address
089a: a9 87     -         lda value
089c: 8d 01 d0  -         sta address
089f: a9 84     -         lda value
08a1: 8d 02 d0  -         sta address
08a4: a9 87     -         lda value
08a6: 8d 03 d0  -         sta address
08a9: a9 d4     -         lda value
08ab: 8d 04 d0  -         sta address
08ae: a9 87     -         lda value
08b0: 8d 05 d0  -         sta address
08b3: a9 08     -         lda value
08b5: 8d 10 d0  -         sta address
08b8: a9 23     -         lda value
08ba: 8d 06 d0  -         sta address
08bd: a9 87     -         lda value
08bf: 8d 07 d0  -         sta address
08c2: 60        -         rts
08c3: a9 0a     - SetupTimers:lda value
08c5: 85 fb     -         sta address
08c7: a9 00     -         lda value
08c9: 85 fc     -         sta address
08cb: a9 12     -         lda value
08cd: 85 fd     -         sta address
08cf: a9 0b     -         lda value
08d1: 85 fe     -         sta address
08d3: a9 01     -         lda value
08d5: 85 02     -         sta address
08d7: a9 02     -         lda value
08d9: 85 03     -         sta address
08db: a9 80     -         lda value
08dd: 85 04     -         sta address
08df: 20 18 20  -         jsr CreateTimer
08e2: a9 05     -         lda value
08e4: 85 fb     -         sta address
08e6: a9 00     -         lda value
08e8: 85 fc     -         sta address
08ea: a9 33     -         lda value
08ec: 85 fd     -         sta address
08ee: a9 0b     -         lda value
08f0: 85 fe     -         sta address
08f2: a9 01     -         lda value
08f4: 85 02     -         sta address
08f6: a9 03     -         lda value
08f8: 85 03     -         sta address
08fa: a9 80     -         lda value
08fc: 85 04     -         sta address
08fe: 20 18 20  -         jsr CreateTimer
0901: 60        -         rts
0902: 08        - Irq:    php
0903: 48        -         pha
0904: 8a        -         txa
0905: 48        -         pha
0906: 98        -         tya
0907: 48        -         pha
0908: 20 47 20  -         jsr UpdateTimers
090b: ad 6b 10  -         lda GameMode
090e: c9 00     -         cmp #GAME_MODE_ATTRACT
0910: d0 08     -         bne !+
0912: 20 e4 21  -         jsr Keyboard
0915: b0 03     -         bcs !+
0917: 8d 6e 10  -         sta LastKeyboardKey
091a: ee 6c 10  -         inc Clock
091d: d0 03     -         bne !+
091f: ee 6d 10  -         inc Clock + $01
0922: a9 ff     -         lda #$ff
0924: 8d 19 d0  -         sta vic.VICIRQ
0927: 68        -         pla
0928: a8        -         tay
0929: 68        -         pla
092a: aa        -         tax
092b: 68        -         pla
092c: 28        -         plp
092d: 40        -         rti
092e: a9 00     - SetupScreen:lda #vic.BLACK
0930: 8d 20 d0  -         sta vic.EXTCOL
0933: 8d 21 d0  -         sta vic.BGCOL0
0936: a9 20     -         lda #clearByte
0938: a2 00     -         ldx #0
093a: 9d 00 04  -         sta screen, x
093d: 9d 00 05  -         sta screen + $100, x
0940: 9d 00 06  -         sta screen + $200, x
0943: 9d 00 07  -         sta screen + $300, x
0946: e8        -         inx
0947: d0 f1     -         bne !-
0949: a9 01     -         lda #clearByte
094b: a2 00     -         ldx #0
094d: 9d 00 d8  -         sta $d800, x
0950: 9d 00 d9  -         sta $d800 + $100, x
0953: 9d 00 da  -         sta $d800 + $200, x
0956: 9d 00 db  -         sta $d800 + $300, x
0959: e8        -         inx
095a: d0 f1     -         bne !-
095c: a9 36     -         lda value
095e: 85 08     -         sta address
0960: a9 04     -         lda value
0962: 85 09     -         sta address
0964: a9 97     -         lda value
0966: 85 10     -         sta address
0968: a9 0c     -         lda value
096a: 85 11     -         sta address
096c: 20 f2 0a  -         jsr WriteString
096f: a9 36     -         lda value
0971: 85 08     -         sta address
0973: a9 d8     -         lda value
0975: 85 09     -         sta address
0977: a9 26     -         lda value
0979: 85 10     -         sta address
097b: a9 0d     -         lda value
097d: 85 11     -         sta address
097f: 20 f2 0a  -         jsr WriteString
0982: a9 2a     -         lda value
0984: 85 08     -         sta address
0986: a9 07     -         lda value
0988: 85 09     -         sta address
098a: a9 80     -         lda value
098c: 85 10     -         sta address
098e: a9 0c     -         lda value
0990: 85 11     -         sta address
0992: 20 f2 0a  -         jsr WriteString
0995: 20 2f 24  -         jsr AllOff
0998: 60        -         rts
0999: ad 6b 10  - GameLoop:lda GameMode
099c: c9 00     -         cmp #GAME_MODE_ATTRACT
099e: d0 06     -         bne CheckComputer
09a0: 20 b5 0a  -         jsr Attract
09a3: 4c 99 09  -         jmp !-
09a6: c9 01     - CheckComputer:cmp #GAME_MODE_COMPUTER                 // Is it the computer's turn?
09a8: d0 70     -         bne CheckHuman
09aa: 20 05 0b  -         jsr ClearLine
09ad: a9 26     -         lda value
09af: 85 08     -         sta address
09b1: a9 07     -         lda value
09b3: 85 09     -         sta address
09b5: a9 a4     -         lda value
09b7: 85 10     -         sta address
09b9: a9 0c     -         lda value
09bb: 85 11     -         sta address
09bd: 20 f2 0a  -         jsr WriteString
09c0: a9 26     -         lda value
09c2: 85 08     -         sta address
09c4: a9 db     -         lda value
09c6: 85 09     -         sta address
09c8: a9 c0     -         lda value
09ca: 85 10     -         sta address
09cc: a9 0c     -         lda value
09ce: 85 11     -         sta address
09d0: 20 f2 0a  -         jsr WriteString
09d3: a9 40     -         lda value
09d5: 85 12     -         sta address
09d7: 20 ca 20  -         jsr PauseJiffies
09da: a2 00     -         ldx #$00
09dc: 86 15     -         stx r8H
09de: a6 15     -         ldx r8H
09e0: bd 6f 10  -         lda GamePattern, x                      // Get the current note
09e3: c9 00     -         cmp #$00                                // Have we reached the end of the pattern?
09e5: f0 15     -         beq !+
09e7: 85 03     -         sta r2H
09e9: a9 30     -         lda value
09eb: 85 12     -         sta address
09ed: a9 05     -         lda value
09ef: 85 13     -         sta address
09f1: 20 04 24  -         jsr ButtonWithSound
09f4: 20 1e 24  -         jsr ButtonHold
09f7: e6 15     -         inc r8H
09f9: 4c de 09  -         jmp !-
09fc: 20 eb 23  -         jsr GenerateRandom                      // Generate a new note and tack it onto the end of the pattern
09ff: 9d 6f 10  -         sta GamePattern, x
0a02: 85 03     -         sta r2H
0a04: a9 30     -         lda value
0a06: 85 12     -         sta address
0a08: a9 05     -         lda value
0a0a: 85 13     -         sta address
0a0c: 20 04 24  -         jsr ButtonWithSound
0a0f: 20 1e 24  -         jsr ButtonHold
0a12: a9 02     -         lda value
0a14: 8d 6b 10  -         sta address
0a17: 4c 99 09  -         jmp GameLoop
0a1a: c9 02     - CheckHuman:cmp #GAME_MODE_HUMAN                    // Is it the human's turn?
0a1c: d0 72     -         bne CheckFail
0a1e: 20 05 0b  -         jsr ClearLine
0a21: a9 22     -         lda value
0a23: 85 08     -         sta address
0a25: a9 07     -         lda value
0a27: 85 09     -         sta address
0a29: a9 dc     -         lda value
0a2b: 85 10     -         sta address
0a2d: a9 0c     -         lda value
0a2f: 85 11     -         sta address
0a31: 20 f2 0a  -         jsr WriteString
0a34: a9 22     -         lda value
0a36: 85 08     -         sta address
0a38: a9 db     -         lda value
0a3a: 85 09     -         sta address
0a3c: a9 01     -         lda value
0a3e: 85 10     -         sta address
0a40: a9 0d     -         lda value
0a42: 85 11     -         sta address
0a44: 20 f2 0a  -         jsr WriteString
0a47: a2 00     -         ldx #$00
0a49: 86 15     -         stx r8H
0a4b: a6 15     -         ldx r8H
0a4d: bd 6f 10  -         lda GamePattern, x                      // Grab the move in the pattern so that we can make sure the human plays the same note
0a50: 85 22     -         sta r12L
0a52: c9 00     -         cmp #$00                                // End of the pattern?
0a54: d0 08     -         bne !+
0a56: a9 01     -         lda value
0a58: 8d 6b 10  -         sta address
0a5b: 4c 99 09  -         jmp GameLoop
0a5e: 20 e4 21  -         jsr Keyboard
0a61: b0 fb     -         bcs !-
0a63: 38        -         sec
0a64: e9 31     -         sbc #$31
0a66: c9 04     -         cmp #$04
0a68: b0 14     -         bcs !++
0a6a: 18        -         clc
0a6b: 69 01     -         adc #$01
0a6d: c5 22     -         cmp r12L                                // Is this the right note?
0a6f: f0 08     -         beq !+
0a71: a9 03     -         lda value
0a73: 8d 6b 10  -         sta address
0a76: 4c 99 09  -         jmp GameLoop
0a79: 85 03     -         sta r2H
0a7b: 20 04 24  -         jsr ButtonWithSound
0a7e: 20 e4 21  -         jsr Keyboard                            // Wait for button to be released
0a81: c9 ff     -         cmp #$ff
0a83: f0 f9     -         beq !-
0a85: 20 2f 24  -         jsr AllOff
0a88: 20 bd 21  -         jsr StopSound
0a8b: e6 15     -         inc r8H
0a8d: 4c 4b 0a  -         jmp !----
0a90: c9 03     - CheckFail:cmp #GAME_MODE_FAIL
0a92: d0 1e     -         bne !+
0a94: a5 22     -         lda r12L
0a96: 85 03     -         sta r2H
0a98: 20 65 24  -         jsr TurnButtonOn
0a9b: a9 00     -         lda #$00
0a9d: 20 9a 21  -         jsr PlaySound
0aa0: a9 40     -         lda value
0aa2: 85 12     -         sta address
0aa4: 20 ca 20  -         jsr PauseJiffies
0aa7: 20 bd 21  -         jsr StopSound
0aaa: 20 2f 24  -         jsr AllOff
0aad: a9 01     -         lda value
0aaf: 8d 6b 10  -         sta address
0ab2: 4c 99 09  -         jmp GameLoop
0ab5: ad 6e 10  - Attract:lda LastKeyboardKey
0ab8: f0 25     -         beq !++
0aba: a9 01     -         lda value
0abc: 8d 6b 10  -         sta address
0abf: a9 0f     -         lda value
0ac1: 8d 15 d0  -         sta address
0ac4: 20 2f 24  -         jsr AllOff
0ac7: a9 03     -         lda value
0ac9: 85 03     -         sta address
0acb: a9 00     -         lda value
0acd: 85 04     -         sta address
0acf: 20 be 20  -         jsr EnDisTimer
0ad2: a2 17     -         ldx #TitleScreen - StartMessage
0ad4: a9 20     -         lda #$20
0ad6: 9d 29 07  -         sta $0729, x
0ad9: ca        -         dex
0ada: d0 fa     -         bne !-
0adc: 4c f1 0a  -         jmp !++
0adf: 20 eb 23  -         jsr GenerateRandom                      // Randomly flash buttons in attract mode
0ae2: 85 03     -         sta r2H
0ae4: 20 65 24  -         jsr TurnButtonOn
0ae7: a9 20     -         lda value
0ae9: 85 12     -         sta address
0aeb: 20 ca 20  -         jsr PauseJiffies
0aee: 20 2f 24  -         jsr AllOff
0af1: 60        -         rts
0af2: a0 00     - WriteString:ldy #$00
0af4: b1 10     -         lda (r6), y
0af6: f0 0c     -         beq !++
0af8: 91 08     -         sta (r5), y
0afa: c8        -         iny
0afb: d0 04     -         bne !+
0afd: e6 11     -         inc r6H
0aff: e6 09     -         inc r5H
0b01: 4c f4 0a  -         jmp !--
0b04: 60        -         rts
0b05: a0 00     - ClearLine:ldy #$00
0b07: a9 20     -         lda #$20
0b09: 99 20 07  -         sta $0720, y
0b0c: c8        -         iny
0b0d: c0 28     -         cpy #$28
0b0f: d0 f8     -         bne !-
0b11: 60        -         rts
0b12: a2 00     - AnimateTitle:ldx #$00
0b14: ac 6a 10  -         ldy CurrentTitleColor
0b17: b9 26 0d  -         lda TitleScreenColor, y
0b1a: 9d 36 d8  -         sta $d836, x
0b1d: e8        -         inx
0b1e: c8        -         iny
0b1f: e0 0c     -         cpx #$0c
0b21: d0 f4     -         bne !-
0b23: ee 6a 10  -         inc CurrentTitleColor
0b26: ad 6a 10  -         lda CurrentTitleColor
0b29: c9 0c     -         cmp #$0c
0b2b: d0 05     -         bne !+
0b2d: a9 00     -         lda #$00
0b2f: 8d 6a 10  -         sta CurrentTitleColor
0b32: 60        -         rts
0b33: a2 00     - AnimateStartMessage:ldx #$00
0b35: ac 69 10  -         ldy CurrentStartMessageColor
0b38: b9 3f 0d  -         lda StartMessageColors, y
0b3b: 9d 2a db  -         sta $db2a, x
0b3e: e8        -         inx
0b3f: e0 17     -         cpx #TitleScreen - StartMessage
0b41: d0 f8     -         bne !-
0b43: ee 69 10  -         inc CurrentStartMessageColor
0b46: ad 69 10  -         lda CurrentStartMessageColor
0b49: c9 08     -         cmp #$08
0b4b: d0 05     -         bne !+
0b4d: a9 00     -         lda #$00
0b4f: 8d 69 10  -         sta CurrentStartMessageColor
0b52: 60        -         rts
0b53: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  -         .align $40
0b63: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
0b73: 00 00 00 00 00 00 00 00 00 00 00 00 00          
0b80: 00 00 00 00 00 00 00 00                          - Sprites:.byte $00,$00,$00,$00,$00,$00,$00,$00
0b88: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0b90: 29 00 00 29 00 00 a9 00                          -         .byte $29,$00,$00,$29,$00,$00,$a9,$00
0b98: 02 a9 00 00 29 00 00 29                          -         .byte $02,$a9,$00,$00,$29,$00,$00,$29
0ba0: 00 00 29 00 00 29 00 00                          -         .byte $00,$00,$29,$00,$00,$29,$00,$00
0ba8: 29 00 00 29 00 02 aa 90                          -         .byte $29,$00,$00,$29,$00,$02,$aa,$90
0bb0: 02 aa 90 00 00 00 00 00                          -         .byte $02,$aa,$90,$00,$00,$00,$00,$00
0bb8: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0bc0: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0bc8: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0bd0: 29 00 00 aa 40 02 92 90                          -         .byte $29,$00,$00,$aa,$40,$02,$92,$90
0bd8: 02 92 90 00 02 90 00 0a                          -         .byte $02,$92,$90,$00,$02,$90,$00,$0a
0be0: 40 00 29 00 00 a4 00 02                          -         .byte $40,$00,$29,$00,$00,$a4,$00,$02
0be8: 90 00 02 90 00 02 aa 90                          -         .byte $90,$00,$02,$90,$00,$02,$aa,$90
0bf0: 02 aa 90 00 00 00 00 00                          -         .byte $02,$aa,$90,$00,$00,$00,$00,$00
0bf8: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0c00: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0c08: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0c10: 29 00 00 aa 40 02 92 90                          -         .byte $29,$00,$00,$aa,$40,$02,$92,$90
0c18: 00 02 90 00 02 90 00 2a                          -         .byte $00,$02,$90,$00,$02,$90,$00,$2a
0c20: 40 00 2a 40 00 02 90 00                          -         .byte $40,$00,$2a,$40,$00,$02,$90,$00
0c28: 02 90 02 92 90 00 aa 40                          -         .byte $02,$90,$02,$92,$90,$00,$aa,$40
0c30: 00 29 00 00 00 00 00 00                          -         .byte $00,$29,$00,$00,$00,$00,$00,$00
0c38: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0c40: 00 00 00 00 00 00 00 00                          -         .byte $00,$00,$00,$00,$00,$00,$00,$00
0c48: 00 00 00 00 00 00 00 02                          -         .byte $00,$00,$00,$00,$00,$00,$00,$02
0c50: 92 90 02 92 90 02 92 90                          -         .byte $92,$90,$02,$92,$90,$02,$92,$90
0c58: 02 92 90 02 92 90 02 aa                          -         .byte $02,$92,$90,$02,$92,$90,$02,$aa
0c60: 90 02 aa 90 00 02 90 00                          -         .byte $90,$02,$aa,$90,$00,$02,$90,$00
0c68: 02 90 00 02 90 00 02 90                          -         .byte $02,$90,$00,$02,$90,$00,$02,$90
0c70: 00 02 90 00 00 00 00 00                          -         .byte $00,$02,$90,$00,$00,$00,$00,$00
0c78: 00 00 00 00 00 00 00 81                          -         .byte $00,$00,$00,$00,$00,$00,$00,$81
0c80: 10 12 05 13 13 20 01 0e 19 20 0b 05 19 20 14 0f  - StartMessage:.text "press any key to start"
0c90: 20 13 14 01 12 14                               
0c96: 00        -         .byte $00
0c97: 06 0f 0c 0c 0f 17 20 0d 05 20 16 31              - TitleScreen:.text "follow me v1"
0ca3: 00        -         .byte $00
0ca4: 17 01 14 03 08 20 01 0e 04 20 0c 09 13 14 05 0e  - MyTurn: .text "watch and listen carefully!"
0cb4: 20 03 01 12 05 06 15 0c 0c 19 21                
0cbf: 00        -         .byte $00
0cc0: 01 01 01 01 01 01 01 01 01 01 01 01              - MyTurnColor:.byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
0ccc: 01 01 01 01 01 01 01 01 01 01 01 01              -         .byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
0cd8: 01 01 01  -         .byte vic.WHITE, vic.WHITE, vic.WHITE
0cdb: 00        -         .byte $00
0cdc: 19 0f 15 12 20 14 15 12 0e 21 20 13 08 0f 17 20  - YourTurn:.text "your turn! show me what ya got, kid!"
0cec: 0d 05 20 17 08 01 14 20 19 01 20 07 0f 14 2c 20 
0cfc: 0b 09 04 21                                     
0d00: 00        -         .byte $00
0d01: 01 01 01 01 01 01 01 01 01 01 01 01              - YourTurnColor:.byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
0d0d: 01 01 01 01 01 01 01 01 01 01 01 01              -         .byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
0d19: 01 01 01 01 01 01 01 01 01 01 01 01              -         .byte vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE, vic.WHITE
0d25: 00        -         .byte $00
0d26: 0a 07 0d 0e 0a 07 0d 0e 0a 07 0d 0e 0a 07 0d 0e  - TitleScreenColor:.byte $0a, $07, $0d, $0e, $0a, $07, $0d, $0e, $0a, $07, $0d, $0e, $0a, $07, $0d, $0e, $0a, $07, $0d, $0e, $0a, $07, $0d, $0e
0d36: 0a 07 0d 0e 0a 07 0d 0e                         
0d3e: 00        -         .byte $00
0d3f: 00 0b 0c 0f 01 0f 0c 0b                          - StartMessageColors:.byte $00, $0b, $0c, $0f, $01, $0f, $0c, $0b
0d47: 55 43 43 43 43 43 43 43 43 49 55 43 43 43 43 43  - Buttons:.byte $55, $43, $43, $43, $43, $43, $43, $43, $43, $49, $55, $43, $43, $43, $43, $43, $43, $43, $43, $49, $55, $43, $43, $43, $43, $43, $43, $43, $43, $49, $55, $43, $43, $43, $43, $43, $43, $43, $43, $49
0d57: 43 43 43 49 55 43 43 43 43 43 43 43 43 49 55 43 
0d67: 43 43 43 43 43 43 43 49                         
0d6f: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
0d7f: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
0d8f: 66 66 66 66 66 66 66 5d                         
0d97: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
0da7: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
0db7: 66 66 66 66 66 66 66 5d                         
0dbf: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
0dcf: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
0ddf: 66 66 66 66 66 66 66 5d                         
0de7: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
0df7: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
0e07: 66 66 66 66 66 66 66 5d                         
0e0f: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
0e1f: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
0e2f: 66 66 66 66 66 66 66 5d                         
0e37: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
0e47: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
0e57: 66 66 66 66 66 66 66 5d                         
0e5f: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
0e6f: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
0e7f: 66 66 66 66 66 66 66 5d                         
0e87: 5d 66 66 66 66 66 66 66 66 5d 5d 66 66 66 66 66  -         .byte $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d, $5d, $66, $66, $66, $66, $66, $66, $66, $66, $5d
0e97: 66 66 66 5d 5d 66 66 66 66 66 66 66 66 5d 5d 66 
0ea7: 66 66 66 66 66 66 66 5d                         
0eaf: 4a 43 43 43 43 43 43 43 43 4b 4a 43 43 43 43 43  -         .byte $4a, $43, $43, $43, $43, $43, $43, $43, $43, $4b, $4a, $43, $43, $43, $43, $43, $43, $43, $43, $4b, $4a, $43, $43, $43, $43, $43, $43, $43, $43, $4b, $4a, $43, $43, $43, $43, $43, $43, $43, $43, $4b
0ebf: 43 43 43 4b 4a 43 43 43 43 43 43 43 43 4b 4a 43 
0ecf: 43 43 43 43 43 43 43 4b                         
0ed7: 00        -         .byte $00
0ed8: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01  - ButtonColors:.byte $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01
0ee8: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
0ef8: 01 01 01 01 01 01 01 01                         
0f00: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
0f10: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
0f20: 06 06 06 06 06 06 06 01                         
0f28: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
0f38: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
0f48: 06 06 06 06 06 06 06 01                         
0f50: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
0f60: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
0f70: 06 06 06 06 06 06 06 01                         
0f78: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
0f88: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
0f98: 06 06 06 06 06 06 06 01                         
0fa0: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
0fb0: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
0fc0: 06 06 06 06 06 06 06 01                         
0fc8: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
0fd8: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
0fe8: 06 06 06 06 06 06 06 01                         
0ff0: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
1000: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
1010: 06 06 06 06 06 06 06 01                         
1018: 01 02 02 02 02 02 02 02 02 01 01 08 08 08 08 08  -         .byte $01, $02, $02, $02, $02, $02, $02, $02, $02, $01, $01, $08, $08, $08, $08, $08, $08, $08, $08, $01, $01, $05, $05, $05, $05, $05, $05, $05, $05, $01, $01, $06, $06, $06, $06, $06, $06, $06, $06, $01
1028: 08 08 08 01 01 05 05 05 05 05 05 05 05 01 01 06 
1038: 06 06 06 06 06 06 06 01                         
1040: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01  -         .byte $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01, $01
1050: 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
1060: 01 01 01 01 01 01 01 01                         
1068: 00        -         .byte $00
1069: 00        - CurrentStartMessageColor:.byte $00
106a: 00        - CurrentTitleColor:.byte $00
106b: 00        - GameMode:.byte $00
106c: 00 00     - Clock:  .word $00
106e: 00        - LastKeyboardKey:.byte $00
106f: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  - GamePattern:.fill $64, $00
108f: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
10af: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
10cf: 00 00 00 00                                                                                     

[Default]
2000: a9 00     - ClearTimers:lda value
2002: 85 fb     -         sta address
2004: a9 3c     -         lda value
2006: 85 fd     -         sta address
2008: a9 03     -         lda value
200a: 85 fe     -         sta address
200c: a9 40     -         lda value
200e: 85 02     -         sta address
2010: a9 00     -         lda value
2012: 85 03     -         sta address
2014: 20 da 20  -         jsr FillMemory
2017: 60        -         rts
2018: a5 03     - CreateTimer:lda r2H
201a: 0a        -         asl
201b: 0a        -         asl
201c: 0a        -         asl
201d: aa        -         tax
201e: a5 04     -         lda value
2020: 9d 3c 03  -         sta address
2023: a5 02     -         lda value
2025: 9d 3d 03  -         sta address
2028: a5 fb     -         lda value
202a: 9d 3e 03  -         sta address
202d: a5 fc     -         lda value
202f: 9d 3f 03  -         sta address
2032: a5 fb     -         lda value
2034: 9d 40 03  -         sta address
2037: a5 fc     -         lda value
2039: 9d 41 03  -         sta address
203c: a5 fd     -         lda value
203e: 9d 42 03  -         sta address
2041: a5 fe     -         lda value
2043: 9d 43 03  -         sta address
2046: 60        -         rts
2047: a0 00     - UpdateTimers:ldy #$00
2049: 98        -         tya
204a: 0a        -         asl
204b: 0a        -         asl
204c: 0a        -         asl
204d: 85 fb     -         sta r0L
204f: aa        -         tax
2050: bd 3c 03  -         lda address
2053: c9 80     -         cmp value
2055: d0 61     -         bne location
2057: e8        -         inx
2058: bd 3c 03  -         lda value
205b: 85 05     -         sta address
205d: e8        -         inx
205e: 86 fe     -         stx r1H
2060: bd 3c 03  -         lda c64lib_timers, x // current value
2063: d0 03     -         bne !return+
2065: de 3d 03  -         dec c64lib_timers + $01, x
2068: de 3c 03  -         dec c64lib_timers, x
206b: bd 3c 03  -         lda c64lib_timers, x
206e: d0 48     -         bne !continue+
2070: bd 3d 03  -         lda c64lib_timers + $01, x
2073: d0 43     -         bne !continue+
2075: e8        -         inx
2076: e8        -         inx
2077: bd 3c 03  -         lda value
207a: 85 02     -         sta address
207c: e8        -         inx
207d: bd 3c 03  -         lda value
2080: 85 03     -         sta address
2082: a5 fe     -         lda r1H
2084: aa        -         tax
2085: a5 02     -         lda value
2087: 9d 3c 03  -         sta address
208a: e8        -         inx
208b: a5 03     -         lda value
208d: 9d 3c 03  -         sta address
2090: e8        -         inx
2091: e8        -         inx
2092: e8        -         inx
2093: 98        -         tya
2094: 48        -         pha
2095: bd 3c 03  -         lda value
2098: 85 02     -         sta address
209a: e8        -         inx
209b: bd 3c 03  -         lda value
209e: 85 03     -         sta address
20a0: 20 a6 20  -         jsr !dispatch+
20a3: 4c a9 20  -         jmp !done_dispatch+
20a6: 6c 02 00  -         jmp (r2)
20a9: 68        -         pla
20aa: a8        -         tay
20ab: a5 05     -         lda address
20ad: c9 01     -         cmp value
20af: f0 07     -         beq location
20b1: a6 fb     -         ldx r0L
20b3: a9 00     -         lda value
20b5: 9d 3c 03  -         sta address
20b8: c8        -         iny
20b9: c0 07     -         cpy #$07
20bb: d0 8c     -         bne !loop-
20bd: 60        -         rts
20be: a5 03     - EnDisTimer:lda r2H
20c0: 0a        -         asl
20c1: 0a        -         asl
20c2: 0a        -         asl
20c3: aa        -         tax
20c4: a5 04     -         lda value
20c6: 9d 3c 03  -         sta address
20c9: 60        -         rts
20ca: a5 12     - PauseJiffies:lda r7L
20cc: 18        -         clc
20cd: 6d 6c 10  -         adc Clock
20d0: 85 12     -         sta r7L
20d2: ad 6c 10  -         lda Clock
20d5: c5 12     -         cmp r7L
20d7: d0 f9     -         bne !-
20d9: 60        -         rts

[MemoryLib]
20da: a0 00     - FillMemory:ldy #$00
20dc: a5 fb     -         lda r0L
20de: 91 fd     -         sta (r1), y
20e0: a5 02     -         lda word
20e2: d0 02     -         bne !+
20e4: c6 03     -         dec word + $01
20e6: c6 02     -         dec word
20e8: a5 03     -         lda byte1
20ea: c9 00     -         cmp #byte2
20ec: d0 04     -         bne !+
20ee: a5 02     -         lda byte1
20f0: c9 00     -         cmp #byte2
20f2: f0 08     -         beq !end+
20f4: c8        -         iny
20f5: d0 e5     -         bne !l1-
20f7: e6 fe     -         inc r1H
20f9: 4c dc 20  -         jmp !l1-
20fc: 60        -         rts
20fd: a5 02     - CopyMemory:lda r2L
20ff: 05 03     -         ora r2H
2101: f0 4d     -         beq !l7+
2103: a5 fc     -         lda address
2105: 48        -         pha
2106: a5 fb     -         lda address
2108: 48        -         pha
2109: a5 fe     -         lda address
210b: 48        -         pha
210c: a5 03     -         lda address
210e: 48        -         pha
210f: a5 04     -         lda address
2111: 48        -         pha
2112: a5 fc     -         lda byte1
2114: c5 fe     -         cmp byte2
2116: d0 04     -         bne !+
2118: a5 fb     -         lda byte1
211a: c5 fd     -         cmp byte2
211c: b0 02     -         bcs !l3+
211e: 90 31     -         bcc !l8+
2120: a0 00     -         ldy #0
2122: a5 03     -         lda r2H
2124: f0 0f     -         beq !l5+
2126: b1 fb     -         lda (r0), y
2128: 91 fd     -         sta (r1), y
212a: c8        -         iny
212b: d0 f9     -         bne !l4-
212d: e6 fc     -         inc r0H
212f: e6 fe     -         inc r1H
2131: c6 03     -         dec r2H
2133: d0 f1     -         bne !l4-
2135: c4 02     -         cpy r2L
2137: f0 08     -         beq !l6+
2139: b1 fb     -         lda (r0), y
213b: 91 fd     -         sta (r1), y
213d: c8        -         iny
213e: b8        -         clv
213f: 50 f4     -         bvc address
2141: 68        -         pla
2142: 85 04     -         sta address
2144: 68        -         pla
2145: 85 03     -         sta address
2147: 68        -         pla
2148: 85 fe     -         sta address
214a: 68        -         pla
214b: 85 fb     -         sta address
214d: 68        -         pla
214e: 85 fc     -         sta address
2150: 60        -         rts
2151: 18        -         clc
2152: a5 03     -         lda r2H
2154: 65 fc     -         adc r0H
2156: 85 fc     -         sta r0H
2158: 18        -         clc
2159: a5 03     -         lda r2H
215b: 65 fe     -         adc r1H
215d: 85 fe     -         sta r1H
215f: a4 02     -         ldy r2L
2161: f0 08     -         beq !lA+
2163: 88        -         dey
2164: b1 fb     -         lda (r0), y
2166: 91 fd     -         sta (r1), y
2168: 98        -         tya
2169: d0 f8     -         bne !l9-
216b: c6 fc     -         dec r0H
216d: c6 fe     -         dec r1H
216f: a5 03     -         lda r2H
2171: f0 ce     -         beq !l6-
2173: 88        -         dey
2174: b1 fb     -         lda (r0), y
2176: 91 fd     -         sta (r1), y
2178: 98        -         tya
2179: d0 f8     -         bne !lB-
217b: c6 03     -         dec r2H
217d: b8        -         clv
217e: 50 eb     -         bvc address
2180: a2 18     - InitSound:ldx #$18
2182: a9 00     -         lda #$00
2184: 9d 00 d4  -         sta sid.FRELO1, x
2187: ca        -         dex
2188: 10 fa     -         bpl !-
218a: a9 0f     -         lda value
218c: 8d 18 d4  -         sta address
218f: a9 22     -         lda value
2191: 8d 05 d4  -         sta address
2194: a9 80     -         lda value
2196: 8d 06 d4  -         sta address
2199: 60        -         rts
219a: 48        - PlaySound:pha
219b: aa        -         tax
219c: bd dd 21  -         lda Waveforms, x
219f: 8d e2 21  -         sta CurrentWaveform
21a2: 68        -         pla
21a3: 0a        -         asl
21a4: aa        -         tax
21a5: bd d3 21  -         lda Notes, x
21a8: 8d 01 d4  -         sta sid.FREHI1
21ab: bd d4 21  -         lda Notes + 1, x
21ae: 8d 00 d4  -         sta sid.FRELO1
21b1: ad e2 21  -         lda CurrentWaveform
21b4: 8d 04 d4  -         sta sid.VCREG1
21b7: a9 01     -         lda #sid.SOUND_PLAYING
21b9: 8d e3 21  -         sta SoundPlaying
21bc: 60        -         rts
21bd: ad e3 21  - StopSound:lda SoundPlaying
21c0: c9 01     -         cmp #sid.SOUND_PLAYING
21c2: d0 0e     -         bne !+
21c4: ce e2 21  -         dec CurrentWaveform
21c7: ad e2 21  -         lda CurrentWaveform
21ca: 8d 04 d4  -         sta sid.VCREG1
21cd: a9 00     -         lda #$00
21cf: 8d e3 21  -         sta SoundPlaying
21d2: 60        -         rts
21d3: 08 61     - Notes:  .byte 8,97      // Fail
21d5: 0c 8f     -         .byte 12,143    // G blue
21d7: 10 c3     -         .byte 16,195    // C yellow
21d9: 15 1f     -         .byte 21,31     // E red
21db: 19 1e     -         .byte 25,30     // G green
21dd: 81 11 11 11 11                                   - Waveforms:.byte sid.WAVE_NOISE, sid.WAVE_TRIANGLE, sid.WAVE_TRIANGLE, sid.WAVE_TRIANGLE, sid.WAVE_TRIANGLE
21e2: 00        - CurrentWaveform:.byte $00
21e3: 00        - SoundPlaying:.byte $00

[Keyboard Scan Routine]
21e4: 4c 4d 22  - Keyboard:jmp Main
21e7: 0a        - KeyInRow:asl
21e8: b0 03     -         bcs *+5
21ea: 20 1f 22  -         jsr KeyFound
21ed: e8        -         inx
21ee: 0a        -         asl
21ef: b0 03     -         bcs *+5
21f1: 20 1f 22  -         jsr KeyFound
21f4: e8        -         inx
21f5: 0a        -         asl
21f6: b0 03     -         bcs *+5
21f8: 20 1f 22  -         jsr KeyFound
21fb: e8        -         inx
21fc: 0a        -         asl
21fd: b0 03     -         bcs *+5
21ff: 20 1f 22  -         jsr KeyFound
2202: e8        -         inx
2203: 0a        -         asl
2204: b0 03     -         bcs *+5
2206: 20 1f 22  -         jsr KeyFound
2209: e8        -         inx
220a: 0a        -         asl
220b: b0 03     -         bcs *+5
220d: 20 1f 22  -         jsr KeyFound
2210: e8        -         inx
2211: 0a        -         asl
2212: b0 03     -         bcs *+5
2214: 20 1f 22  -         jsr KeyFound
2217: e8        -         inx
2218: 0a        -         asl
2219: b0 03     -         bcs *+5
221b: 20 1f 22  -         jsr KeyFound
221e: 60        -         rts
221f: 86 5e     - KeyFound:stx TempZP
2221: c6 5b     -         dec KeyQuantity
2223: 30 0a     -         bmi OverFlow
2225: bc a2 23  -         ldy KeyTable,x
2228: a6 5b     -         ldx KeyQuantity
222a: 94 58     -         sty BufferNew,x
222c: a6 5e     -         ldx TempZP
222e: 60        -         rts
222f: 68        - OverFlow:pla  // Dirty hack to handle 2 layers of JSR
2230: 68        -         pla
2231: 68        -         pla
2232: 68        -         pla
2233: a9 03     -         lda #$03
2235: 38        -         sec
2236: 60        -         rts
2237: a9 00     - NoActivityDetected:lda #$00
2239: 8d ea 23  -         sta SimultaneousAlphanumericKeysFlag  // Clear the too many keys flag once a "no activity" state is detected.
223c: 8e e2 23  -         stx BufferOld
223f: 8e e3 23  -         stx BufferOld+1
2242: 8e e4 23  -         stx BufferOld+2
2245: 38        -         sec
2246: a9 01     -         lda #$01
2248: 60        -         rts
2249: 38        - ControlPort:sec
224a: a9 02     -         lda #$02
224c: 60        -         rts
224d: a2 ff     - Main:   ldx #$ff
224f: 8e 02 dc  -         stx $dc02       // Port A - Output
2252: a0 00     -         ldy #$00
2254: 8c 03 dc  -         sty $dc03       // Port B - Input
2257: 8c 00 dc  -         sty $dc00       // Connect all Keyboard Rows
225a: ec 01 dc  -         cpx $dc01
225d: f0 d8     -         beq NoActivityDetected
225f: ad ea 23  -         lda SimultaneousAlphanumericKeysFlag
2262: f0 04     -         beq !+
2264: a9 05     -         lda #$05
2266: 38        -         sec
2267: 60        -         rts
2268: 8e 00 dc  -         stx $dc00       // Disconnect all Keyboard Rows
226b: ec 01 dc  -         cpx $dc01       // Only Control Port activity will be detected
226e: d0 d9     -         bne ControlPort
2270: a9 fe     -         lda #%11111110
2272: 8d 00 dc  -         sta $dc00
2275: ac 01 dc  -         ldy $dc01
2278: 84 57     -         sty ScanResult+7
227a: 38        -         sec
227b: 2a        -         rol
227c: 8d 00 dc  -         sta $dc00
227f: ac 01 dc  -         ldy $dc01
2282: 84 56     -         sty ScanResult+i
2284: 2a        -         rol
2285: 8d 00 dc  -         sta $dc00
2288: ac 01 dc  -         ldy $dc01
228b: 84 55     -         sty ScanResult+i
228d: 2a        -         rol
228e: 8d 00 dc  -         sta $dc00
2291: ac 01 dc  -         ldy $dc01
2294: 84 54     -         sty ScanResult+i
2296: 2a        -         rol
2297: 8d 00 dc  -         sta $dc00
229a: ac 01 dc  -         ldy $dc01
229d: 84 53     -         sty ScanResult+i
229f: 2a        -         rol
22a0: 8d 00 dc  -         sta $dc00
22a3: ac 01 dc  -         ldy $dc01
22a6: 84 52     -         sty ScanResult+i
22a8: 2a        -         rol
22a9: 8d 00 dc  -         sta $dc00
22ac: ac 01 dc  -         ldy $dc01
22af: 84 51     -         sty ScanResult+i
22b1: 2a        -         rol
22b2: 8d 00 dc  -         sta $dc00
22b5: ac 01 dc  -         ldy $dc01
22b8: 84 50     -         sty ScanResult+i
22ba: 8e 00 dc  -         stx $dc00       // Disconnect all Keyboard Rows
22bd: ec 01 dc  -         cpx $dc01       // Only Control Port activity will be detected
22c0: d0 87     -         bne ControlPort
22c2: 86 58     -         stx BufferNew
22c4: 86 59     -         stx BufferNew+1
22c6: 86 5a     -         stx BufferNew+2
22c8: e8        -         inx
22c9: 86 5d     -         stx NonAlphaFlagY
22cb: a9 03     -         lda #MaxKeyRollover
22cd: 85 5b     -         sta KeyQuantity
22cf: a9 fe     -         lda #$fe
22d1: 85 5f     -         sta SimultaneousKeys
22d3: a5 56     -         lda ScanResult+6
22d5: 49 ff     -         eor #$ff
22d7: 29 80     -         and #%10000000     // Left Shift
22d9: 4a        -         lsr
22da: 85 5d     -         sta NonAlphaFlagY
22dc: a5 50     -         lda ScanResult+0
22de: 49 ff     -         eor #$ff
22e0: 29 a4     -         and #%10100100     // RUN STOP - C= - CTRL
22e2: 05 5d     -         ora NonAlphaFlagY
22e4: 85 5d     -         sta NonAlphaFlagY
22e6: a5 51     -         lda ScanResult+1
22e8: 49 ff     -         eor #$ff
22ea: 29 18     -         and #%00011000     // Right SHIFT - CLR HOME
22ec: 05 5d     -         ora NonAlphaFlagY
22ee: 85 5d     -         sta NonAlphaFlagY
22f0: a5 57     -         lda ScanResult+7  // The rest
22f2: 49 ff     -         eor #$ff
22f4: 85 5c     -         sta NonAlphaFlagX
22f6: a5 57     -         lda ScanResult+7
22f8: c9 ff     -         cmp #$ff
22fa: f0 03     -         beq *+5
22fc: 20 e7 21  -         jsr KeyInRow
22ff: a2 08     -         ldx #[7-i]*8
2301: a5 56     -         lda ScanResult+i
2303: f0 03     -         beq *+5
2305: 20 e7 21  -         jsr KeyInRow
2308: a2 10     -         ldx #[7-i]*8
230a: a5 55     -         lda ScanResult+i
230c: f0 03     -         beq *+5
230e: 20 e7 21  -         jsr KeyInRow
2311: a2 18     -         ldx #[7-i]*8
2313: a5 54     -         lda ScanResult+i
2315: f0 03     -         beq *+5
2317: 20 e7 21  -         jsr KeyInRow
231a: a2 20     -         ldx #[7-i]*8
231c: a5 53     -         lda ScanResult+i
231e: f0 03     -         beq *+5
2320: 20 e7 21  -         jsr KeyInRow
2323: a2 28     -         ldx #[7-i]*8
2325: a5 52     -         lda ScanResult+i
2327: f0 03     -         beq *+5
2329: 20 e7 21  -         jsr KeyInRow
232c: a2 30     -         ldx #[7-i]*8
232e: a5 51     -         lda ScanResult+i
2330: f0 03     -         beq *+5
2332: 20 e7 21  -         jsr KeyInRow
2335: a2 38     -         ldx #[7-i]*8
2337: a5 50     -         lda ScanResult+i
2339: f0 03     -         beq *+5
233b: 20 e7 21  -         jsr KeyInRow
233e: a2 02     -         ldx #MaxKeyRollover-1
2340: b5 58     -         lda BufferNew,x
2342: c9 ff     -         cmp #$ff
2344: f0 1c     -         beq Exist        // Handle 'null' values
2346: cd e2 23  -         cmp BufferOld
2349: f0 17     -         beq Exist
234b: cd e3 23  -         cmp BufferOld+1
234e: f0 12     -         beq Exist
2350: cd e4 23  -         cmp BufferOld+2
2353: f0 0d     -         beq Exist
2355: ee e9 23  -         inc BufferQuantity
2358: ac e9 23  -         ldy BufferQuantity
235b: 99 e5 23  -         sta Buffer,y
235e: e6 5f     -         inc SimultaneousKeys
2360: f0 34     -         beq TooManyNewKeys
2362: ca        - Exist:  dex
2363: 10 db     -         bpl !-
2365: ac e9 23  -         ldy BufferQuantity
2368: 30 15     -         bmi BufferEmpty
236a: ce e9 23  -         dec BufferQuantity
236d: ad e5 23  -         lda Buffer
2370: ae e6 23  -         ldx Buffer+1
2373: 8e e5 23  -         stx Buffer
2376: ae e7 23  -         ldx Buffer+2
2379: 8e e6 23  -         stx Buffer+1
237c: 4c 81 23  -         jmp Return
237f: a9 ff     - BufferEmpty:lda #$ff
2381: 18        - Return: clc
2382: a6 58     -         ldx BufferNew
2384: 8e e2 23  -         stx BufferOld
2387: a6 59     -         ldx BufferNew+1
2389: 8e e3 23  -         stx BufferOld+1
238c: a6 5a     -         ldx BufferNew+2
238e: 8e e4 23  -         stx BufferOld+2
2391: a6 5c     -         ldx NonAlphaFlagX
2393: a4 5d     -         ldy NonAlphaFlagY
2395: 60        -         rts
2396: 38        - TooManyNewKeys:sec
2397: a9 ff     -         lda #$ff
2399: 8d e9 23  -         sta BufferQuantity
239c: 8d ea 23  -         sta SimultaneousAlphanumericKeysFlag
239f: a9 04     -         lda #$04
23a1: 60        -         rts
23a2: ff ff ff ff ff ff ff ff                          - KeyTable:.byte $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff  // CRSR DOWN, F5, F3, F1, F7, CRSR RIGHT, RETURN, INST DEL
23aa: ff 05 13 1a 34 01 17 33                          -         .byte $ff, $05, $13, $1a, $34, $01, $17, $33  // LEFT SHIFT, "E", "S", "Z", "4", "A", "W", "3"
23b2: 18 14 06 03 36 04 12 35                          -         .byte $18, $14, $06, $03, $36, $04, $12, $35  // "X", "T", "F", "C", "6", "D", "R", "5"
23ba: 16 15 08 02 38 07 19 37                          -         .byte $16, $15, $08, $02, $38, $07, $19, $37  // "V", "U", "H", "B", "8", "G", "Y", "7"
23c2: 0e 0f 0b 0d 30 0a 09 39                          -         .byte $0e, $0f, $0b, $0d, $30, $0a, $09, $39  // "N", "O" (Oscar), "K", "M", "0" (Zero), "J", "I", "9"
23ca: 2c 00 3a 2e 2d 0c 10 2b                          -         .byte $2c, $00, $3a, $2e, $2d, $0c, $10, $2b  // ",", "@", ":", ".", "-", "L", "P", "+"
23d2: 2f 1e 3d ff ff 3b 2a 1c                          -         .byte $2f, $1e, $3d, $ff, $ff, $3b, $2a, $1c  // "/", "^", "=", RIGHT SHIFT, HOME, ";", "*", "£"
23da: ff 11 ff 20 32 ff 1f 31                          -         .byte $ff, $11, $ff, $20, $32, $ff, $1f, $31  // RUN STOP, "Q", "C=" (CMD), " " (SPC), "2", "CTRL", "<-", "1"
23e2: ff ff ff  - BufferOld:.byte $ff, $ff, $ff
23e5: ff ff ff ff                                      - Buffer: .byte $ff, $ff, $ff, $ff
23e9: ff        - BufferQuantity:.byte $ff
23ea: 00        - SimultaneousAlphanumericKeysFlag:.byte $00
23eb: ad 1b d4  - GenerateRandom:lda $d41b
23ee: 29 03     -         and #$03
23f0: 18        -         clc
23f1: 69 01     -         adc #$01
23f3: 60        -         rts
23f4: a9 ff     - InitRandom:lda value
23f6: 8d 0e d4  -         sta address
23f9: a9 ff     -         lda value
23fb: 8d 0f d4  -         sta address
23fe: a9 80     -         lda value
2400: 8d 12 d4  -         sta address
2403: 60        -         rts
2404: ad e3 24  - ButtonWithSound:lda ButtonLit
2407: c9 00     -         cmp #$00
2409: d0 12     -         bne !+
240b: a5 03     -         lda r2H
240d: 8d e3 24  -         sta ButtonLit
2410: 20 9a 21  -         jsr PlaySound
2413: a6 03     -         ldx r2H
2415: a9 01     -         lda #vic.WHITE
2417: 9d 26 d0  -         sta vic.SPMC1, x
241a: 20 65 24  -         jsr TurnButtonOn
241d: 60        -         rts
241e: 20 ca 20  - ButtonHold:jsr PauseJiffies
2421: 20 bd 21  -         jsr StopSound
2424: 20 2f 24  -         jsr AllOff
2427: a5 13     -         lda value
2429: 85 12     -         sta address
242b: 20 ca 20  -         jsr PauseJiffies
242e: 60        -         rts
242f: a9 18     - AllOff: lda value
2431: 85 08     -         sta address
2433: a9 05     -         lda value
2435: 85 09     -         sta address
2437: a9 47     -         lda value
2439: 85 10     -         sta address
243b: a9 0d     -         lda value
243d: 85 11     -         sta address
243f: 20 f2 0a  -         jsr WriteString
2442: a9 18     -         lda value
2444: 85 08     -         sta address
2446: a9 d9     -         lda value
2448: 85 09     -         sta address
244a: a9 d8     -         lda value
244c: 85 10     -         sta address
244e: a9 0e     -         lda value
2450: 85 11     -         sta address
2452: 20 f2 0a  -         jsr WriteString
2455: a2 04     -         ldx #$04
2457: a9 0b     -         lda #vic.DK_GRAY
2459: 9d 26 d0  -         sta vic.SPMC1, x
245c: ca        -         dex
245d: d0 fa     -         bne !-
245f: a9 00     -         lda value
2461: 8d e3 24  -         sta address
2464: 60        -         rts
2465: a5 03     - TurnButtonOn:lda r2H
2467: c9 01     -         cmp #$01
2469: d0 0f     -         bne !+
246b: a9 41     -         lda value
246d: 85 18     -         sta address
246f: a9 05     -         lda value
2471: 85 19     -         sta address
2473: a9 0a     -         lda value
2475: 85 02     -         sta address
2477: 4c b0 24  -         jmp !++++
247a: c9 02     -         cmp #$02
247c: d0 0f     -         bne !+
247e: a9 4b     -         lda value
2480: 85 18     -         sta address
2482: a9 05     -         lda value
2484: 85 19     -         sta address
2486: a9 07     -         lda value
2488: 85 02     -         sta address
248a: 4c b0 24  -         jmp !+++
248d: c9 03     -         cmp #$03
248f: d0 0f     -         bne !+
2491: a9 55     -         lda value
2493: 85 18     -         sta address
2495: a9 05     -         lda value
2497: 85 19     -         sta address
2499: a9 0d     -         lda value
249b: 85 02     -         sta address
249d: 4c b0 24  -         jmp !++
24a0: c9 04     -         cmp #$04
24a2: d0 0c     -         bne !+
24a4: a9 5f     -         lda value
24a6: 85 18     -         sta address
24a8: a9 05     -         lda value
24aa: 85 19     -         sta address
24ac: a9 0e     -         lda value
24ae: 85 02     -         sta address
24b0: 20 b4 24  -         jsr LightButton
24b3: 60        -         rts
24b4: a2 00     - LightButton:ldx #$00
24b6: a0 00     -         ldy #$00
24b8: a9 a0     -         lda #$a0
24ba: 91 18     -         sta (r10), y
24bc: a5 18     -         lda r10L
24be: 85 fd     -         sta r1L
24c0: a5 19     -         lda r10H
24c2: 18        -         clc
24c3: 69 d4     -         adc #$d4
24c5: 85 fe     -         sta r1H
24c7: a5 02     -         lda r2L
24c9: 91 fd     -         sta (r1), y
24cb: c8        -         iny
24cc: c0 08     -         cpy #$08
24ce: d0 e8     -         bne !-
24d0: a0 00     -         ldy #$00
24d2: 18        -         clc
24d3: a5 18     -         lda r10L
24d5: 69 28     -         adc #$28
24d7: 85 18     -         sta r10L
24d9: 90 02     -         bcc !+
24db: e6 19     -         inc r10H
24dd: e8        -         inx
24de: e0 08     -         cpx #$08
24e0: d0 d6     -         bne !--
24e2: 60        -         rts
24e3: 00        - ButtonLit:.byte $00
